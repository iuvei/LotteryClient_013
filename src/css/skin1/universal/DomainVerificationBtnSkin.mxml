<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

@see spark.components.Button

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   width="310" height="52"
				   alpha.disabled="0.5">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			import spark.components.Group;
			/* Define the skin elements that should not be colorized. 
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];
			
			/** 
			 * @private
			 */     
			override public function get colorizeExclusions():Array {return exclusions;}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}  
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var cr:Number = getStyle("cornerRadius");
				
				if (cornerRadius != cr)
				{
					cornerRadius = cr;
					//shadow.radiusX = cornerRadius;
					//  fill.radiusX = cornerRadius;
					//  lowlight.radiusX = cornerRadius;
					//  highlight.radiusX = cornerRadius;
					//  border.radiusX = cornerRadius;
				}
				
				//   if (highlightStroke) highlightStroke.radiusX = cornerRadius;
				//   if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
				//   if (hldownstroke2) hldownstroke2.radiusX = cornerRadius;
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				this.hostComponent.buttonMode = true;
			}
			private var cornerRadius:Number = 2;
			
		]]>        
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	<s:Image source="css/skin1/assets/loginbtn.png"/>
	<s:Rect id="lowlight" left="0" right="0" top="0" bottom="0" radiusX="50">
		<s:fill>
			<s:LinearGradient rotation="0">
				<s:GradientEntry color="0x34a9db"  alpha="0" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	
	<s:Label id="labelDisplay"
			 textAlign="center" digitWidth="proportional"
			 maxDisplayedLines="1" fontFamily="Microsoft YaHei,微软雅黑" fontSize="24" 
			   color="#6f6fbf" color.over="#dfb522" color.down="#dfb522"
			 horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
			 left="5" right="5" 
			 top="8" bottom="8"
			 >
	</s:Label>
	
</s:SparkButtonSkin>
