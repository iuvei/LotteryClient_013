<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

@see spark.components.Button

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="160" minHeight="34" 
				   alpha.disabled="0.5" xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			import spark.components.Group;
			/* Define the skin elements that should not be colorized. 
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];
			
			/** 
			 * @private
			 */     
			override public function get colorizeExclusions():Array {return exclusions;}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}  
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var cr:Number = getStyle("cornerRadius");
				
				if (cornerRadius != cr)
				{
					cornerRadius = cr;
					/*  shadow.radiusX = cornerRadius;
					fill.radiusX = cornerRadius;
					lowlight.radiusX = cornerRadius;
					highlight.radiusX = cornerRadius;
					border.radiusX = cornerRadius; */
				}
				
				/*  if (highlightStroke) highlightStroke.radiusX = cornerRadius;
				if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
				if (hldownstroke2) hldownstroke2.radiusX = cornerRadius; */
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				this.hostComponent.buttonMode = true;
			}
			
			private var cornerRadius:Number = 2;
			
		]]>        
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over"  />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- layer 1: shadow -->
	<!--- @private -->
	<!--<s:Rect id="shadow" left="-1" right="-1" top="-1" bottom="-1" radiusX="2">
	<s:fill>
	<s:LinearGradient rotation="90">
	<s:GradientEntry color="0x000000" 
	color.down="0xFFFFFF"
	alpha="0.01"
	alpha.down="0" />
	<s:GradientEntry color="0x000000" 
	color.down="0xFFFFFF" 
	alpha="0.07"
	alpha.down="0.5" />
	</s:LinearGradient>
	</s:fill>
	</s:Rect>-->
	
	<!--<s:BitmapImage smooth="true" horizontalCenter="0" verticalCenter="0"
	source="{getStyle('disabledImg')}" 
	source.over="{getStyle('downImg')}" 
	source.down="{getStyle('downImg')}"/>-->
	
	
	<!--<s:Rect id="fill" left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5" 
			alpha.up="0.8" alpha.over="1" alpha.down="1">
		<s:fill >
			<s:LinearGradient >
				<s:GradientEntry color="0xbd0000" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect id="border" left="0" right="0" top="0" bottom="0"  >
		<s:stroke>
			<s:LinearGradientStroke  weight="1">
				<s:GradientEntry color="0x969696"  alpha="1" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>-->
	
	<!--<s:Image source="css/skin1/images/personalCenter/PopupRedBtn.png" alpha.up="0.8" alpha.over="1" alpha.down="1"/>-->
	
	<s:BitmapImage width="160" alpha.up="0.8" alpha.over="1" alpha.down="1"
				   source="@Embed('css/skin1/images/personalCenter/PopupRedBtn.png',
				   scaleGridLeft='15', scaleGridRight='20', scaleGridTop='15', scaleGridBottom='20')"/> 
	
	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
	<s:Label id="labelDisplay"  fontSize="14"
			 textAlign="center"
			 color="0xffffff"
			 color.over="0xffffff"
			 color.down="0xffffff"
			 verticalCenter="2"
			 horizontalCenter="0" >
	</s:Label>
	
</s:SparkButtonSkin>
