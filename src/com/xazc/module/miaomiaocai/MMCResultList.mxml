<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  implements="com.xazc.interfaces.IInit,com.xazc.interfaces.IRecyclable"
					  creationComplete="group1_creationCompleteHandler(event)"
					  height="189" width="248"  styleName="resultListBgStyle">
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerTool;
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.event.CustomEvent;
			import com.xazc.event.Sendnotification;
			import com.xazc.event.SystemEvent;
			import com.xazc.manager.TimerManager;
			import com.xazc.single.CurrentBusinessInfo;
			import com.xazc.single.CurrentLotteryInfo;
			import com.xazc.single.Util;
			import com.xazc.single.lotteryNameHelp;
			
			import css.skin1.universal.ListResultSkinableContainerSkin;
			
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.events.DynamicEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.Button;
			import spark.components.Label;
			private var tempLottery:String = "0";
			
			public var currentPage:int=1;//当前页
			private var currentPageSize:int=15;//当页行数
			/**开奖结果*/
			private var  tempUpDataValue:String;
			/**服务器返回的开奖链表  */
			private var resultListsObj:Object;
			public function init():void
			{
				var serverTool:ServerTool = new ServerToolImpl();
				var obj:Object = new Object();
				obj.LotteryCode =  CurrentLotteryInfo.lotteryId;
				var s:Date=new Date();
				obj.BeginTime =df1.format(new Date(s.fullYear,s.month,s.date-3))+" 00:00:00";
				obj.EndTime = df1.format(new Date(s.fullYear,s.month,s.date))+" 23:59:59";
				obj.CurrentPageSize = currentPageSize;
				obj.CurrentPageIndex = currentPage-1;
				serverTool.getLotteryDrawPageFlx (obj,getKaijiangMessage);
				Util.getInstance().addEventListener(SystemEvent.SELECTED_LOTTERY_CHANGE, selectedLotteryChangeHandler);
				Sendnotification.instance.addEventListener(SystemEvent.SELECTED_LOTTERY_CHANGE, selectedLotteryChangeHandler);
				Sendnotification.instance.addEventListener(CustomEvent.ENDPLAYLOTTERYANIMATION,upDataList);
			}
			private function selectedLotteryChangeHandler(e:SystemEvent):void{
				recycle()
			}
			protected function upDataList(event:CustomEvent):void
			{
				var arr:Object = resultListsObj;
				tempUpDataValue = (event.body).toString();
				if(arr.IssueModlst == null)
				{
					var serverTool:ServerTool = new ServerToolImpl();
					var obj:Object = new Object();
					obj.LotteryCode =  CurrentLotteryInfo.lotteryId;
					var s:Date=new Date();
					obj.BeginTime =df1.format(new Date(s.fullYear,s.month,s.date-3))+" 00:00:00";
					obj.EndTime = df1.format(new Date(s.fullYear,s.month,s.date))+" 23:59:59";
					obj.CurrentPageSize = currentPageSize;
					obj.CurrentPageIndex = currentPage-1;
					serverTool.getLotteryDrawPageFlx (obj,upDataListFromServer);
				}
				else
				{
					var newArr:Array = new Array();
					var tempObj:Object = new Object;
					tempObj.DrawResult1 = (event.body).toString();
					newArr.push(tempObj);
					for (var i:int = 0; i <arr.IssueModlst.length; i++) 
					{
						newArr.push(arr.IssueModlst[i]);
					}
					arr.IssueModlst = newArr;
					this.showMoreResults(5);
				}
			}
			protected function upDataListFromServer(e:ResultEvent):void
			{
				var arr:Object = JSON.parse(e.result.toString());
				resultListsObj = arr;
				trace(e.result.toString());
				var newArr:Array = new Array();
				for (var i:int = 0; i <arr.IssueModlst.length; i++) 
				{
					newArr.push(arr.IssueModlst[i]);
				}
				arr.IssueModlst = newArr;
				this.showMoreResults(5);
			}
			public function recycle():void
			{
				trace("清空回收组件。。。");
				Util.getInstance().removeEventListener(SystemEvent.SELECTED_LOTTERY_CHANGE, selectedLotteryChangeHandler);
				Sendnotification.instance.removeEventListener(SystemEvent.SELECTED_LOTTERY_CHANGE, selectedLotteryChangeHandler);
				Sendnotification.instance.removeEventListener(CustomEvent.ENDPLAYLOTTERYANIMATION,upDataList);
			}
			
			public function getKaijiangMessage(e:ResultEvent):void
			{
				var arr:Object = JSON.parse(e.result.toString());
				resultListsObj = arr;
				trace(e.result.toString());
				Sendnotification.instance.dispatchEvent(new CustomEvent(CustomEvent.GETBETLISTGOTOPLAYLOTTERYANIMATION,arr.IssueModlst));
				this.showMoreResults(5);
			}
			
			public function showMoreResults(k:int):void
			{
				listVg.removeAllElements();
				
				var arr:Object = resultListsObj;
				var titleGrid:Grid
				if(resultListsObj!=null && resultListsObj.SystemState == 64 && arr.IssueModlst!=null)
				{
					titleGrid = new Grid;
					var tempNum:int = 0;
					if(k == 5){
						if((arr.IssueModlst as Array).length<5){
							tempNum = (arr.IssueModlst as Array).length;
						}else{
							tempNum = 5;
						}
					}else{
						if((arr.IssueModlst as Array).length<10){
							tempNum = (arr.IssueModlst as Array).length;
						}else{
							tempNum = 10;
						}
					}
					titleGrid.width = 132;
					titleGrid.setStyle("borderVisible",false);
					titleGrid.setStyle("verticalGap",0);
					for(var j:int = 0;j < tempNum; j++){
						var titlerow:GridRow=new GridRow();
						titlerow.height=23;
						for(var i:int= 0;i< 2;i++){
							if(0==i){
								var gridItem:GridItem=new GridItem();
								gridItem.setStyle("borderVisible",false);
								gridItem.setStyle("horizontalGap",3);
								gridItem.width = 66;
								var tempArr:Array = arr.IssueModlst[j].DrawResult1.split(",") as Array;
								for(var o:int = 0;o<tempArr.length;o++){
									var btn:Label = new Label();
									btn.styleName = "mmcLabelStyles8";
									btn.text = tempArr[o] as String
									gridItem.addChild(btn);
								}
								titlerow.addChild(gridItem);
							}
							else{
								var gridItem1:GridItem=new GridItem();
								gridItem1.setStyle("borderVisible",false);
								gridItem1.width = 66;
								var label:Label=new Label();
								label.text=Util.getInstance().getLastThreePlaysBybetNumbers(arr.IssueModlst[j].DrawResult1);
								label.styleName = "mmcLabelStyles9";
								gridItem1.addChild(label);
								titlerow.addChild(gridItem1);
							}
						}
						titleGrid.addChild(titlerow);
					}
					listVg.addElementAt(titleGrid,0);
					listVg.height = tempNum*32+2;
					if(k==5){
						if((arr.IssueModlst as Array).length<6){
							this.moreResults.visible = false;
							this.moreResults.includeInLayout = false;
							
							this.bgTwo.visible = false;
							this.bgTwo.includeInLayout = false;
							this.bgContainer.visible = false;
							this.bgContainer.includeInLayout = false;
							
						}else{
							this.moreResults.visible = true;
							this.moreResults.includeInLayout = true;
							
							this.bgTwo.visible = false;
							this.bgTwo.includeInLayout = false;
							this.bgContainer.visible = false;
							this.bgContainer.includeInLayout = false;
						}
					}else{
						this.moreResults.visible = false;
						this.moreResults.includeInLayout = false;
						
						this.bgTwo.visible = true;
						this.bgTwo.includeInLayout = true;
						this.bgContainer.visible = true;
						this.bgContainer.includeInLayout = true;
					}
				}
				else
				{
					titleGrid = new Grid;
					titleGrid.width = 118;
					titleGrid.setStyle("borderVisible",false);
					titleGrid.setStyle("verticalGap",0);
					
					var titlerowTwo:GridRow=new GridRow();
					titlerowTwo.percentWidth = 100;
					titlerowTwo.height=25;
					var gridItemTwo:GridItem=new GridItem();
					gridItemTwo.percentWidth = 100;
					var labelTwo:Label=new Label();
					labelTwo.percentWidth = 100;
					labelTwo.text="暂无数据";
					labelTwo.styleName = "lastLabelStyles4";
					labelTwo.setStyle("paddingLeft",0);
					labelTwo.setStyle("paddingTop",-6);
					gridItemTwo.addChild(labelTwo);
					titlerowTwo.addChild(gridItemTwo);
					titleGrid.addChild(titlerowTwo);
					listVg.addElementAt(titleGrid,0);
				}
			}
			
			
			
			public function objItem(value:Object):void
			{
				if(value.CzType=="9"){
					var index:int = (value.CzNum as String).lastIndexOf(",");
					var tempStr:String = (value.CzNum as String).substring(0,index)+"#"+(value.CzNum as String).substring(index+1);
					value.CzNum = tempStr;
				}else if(value.CzType=="24"||value.CzType=="23"){
					var index1:int = (value.CzNum as String).lastIndexOf(",");
					var tempStr1:String = (value.CzNum as String).substring(0,index1)+"|"+(value.CzNum as String).substring(index1+1);
					value.CzNum = tempStr1;
				}
				
				
			}
			/**
			 *  组件初始化完毕后调用
			 * 
			 */
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				//初始化
				//this.init();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:DateFormatter id="df" formatString="YYYY-MM-DD JJ:NN:SS"/>
		<mx:DateFormatter id="df1" formatString="YYYY-MM-DD"/>
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("LotteryTips")]
		[Event(name="addResultObjectEvent",type="mx.events.DynamicEvent")]
		[Event(name="lookResultDetailEvent",type="mx.events.DynamicEvent")]
	</fx:Metadata>
	<s:BitmapImage source="@Embed('css/skin1/images/MMC/ResultList_03.png')" top="24"/>
	<s:BitmapImage id="bgTwo" source="@Embed('css/skin1/images/MMC/ResultList_02.png')"
				   visible="false" includeInLayout="false" top="24"/>
	<s:VGroup width="132" id="listVg" paddingTop="62"  left="12">
		
	</s:VGroup>
	<s:HGroup top="175" left="2">
		<s:Image source="@Embed('css/skin1/images/MMC/ResultList_01.png')" id="moreResults" horizontalCenter="0" 
				 buttonMode="true" click="showMoreResults(10)" visible="false" includeInLayout="false"/>
	</s:HGroup>
	<s:Group id="bgContainer" top="24" width="143" height="275" mouseOut="showMoreResults(5)" visible="false" includeInLayout="false">
	</s:Group>
</s:SkinnableContainer>
