<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		  xmlns:ssc="com.xazc.components.ssc.*" gap="0"
		  creationComplete="creationCompleteHandler(event)" xmlns:bettings="com.xazc.components.bettings.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.vo.Cathectic;
			import com.xazc.event.BetsClickEvent;
			import com.xazc.event.ChangeShowDateEvent;
			import com.xazc.event.CustomEvent;
			import com.xazc.single.MathUtil;
			import com.xazc.single.Util;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.ToolTipEvent;
			import mx.managers.ToolTipManager;
			[Bindable]
			private var playType:int = 1;
			
			private var selectedPlayContainer:DisplayObject;
			
			private var game_id:String = "19";
			
			public var lotteryID:String = "";
			
			public var error:Boolean = false;
			
			private var numbersArr:Array = new Array();
			
			private var bettingInfo:Cathectic;
			
			public var zhushu:Number = 0;
			
			//类型
			private var sntuo:int = 0;
			
			public var selectNumbersArr:Array = [];
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				bettingInfo = new Cathectic();
				bettingInfo.lottery_type = lotteryID;
				game_id = lotteryID + game_id;
				bettingInfo.game_id = game_id;
				selectedPlayContainer = playContainer1;
				Util.getInstance().addEventListener(BetsClickEvent.CLEAN_ALL_SELECTED_NUMBERS, clearAll);
				Util.getInstance().dispatchEvent(new ChangeShowDateEvent(ChangeShowDateEvent.CHANGE_SINGLE_PRIZE,game_id));
			}
			
			protected function playClickHandler(event:MouseEvent):void
			{
				var target:ToggleButton = event.currentTarget as ToggleButton;
				var targetID:String = target.id;
				game_id = lotteryID + (targetID.split("_").length == 2 ? targetID.split("_")[1] : targetID.split("_")[2]);
				bettingInfo.game_id = game_id;
				clearAll();
				bettingInfo.tzzs = 0;
				target.selected = true;
				dispatchEvent(new BetsClickEvent(BetsClickEvent.CONFIRM_BTN_ENABLE,bettingInfo));
				Util.getInstance().dispatchEvent(new ChangeShowDateEvent(ChangeShowDateEvent.CHANGE_SINGLE_PRIZE,game_id));
				switch (target.id)
				{
					case "play_19":
						sntuo = 0;
						playType = 1;
						gameType.text = resourceManager.getString('LotteryTips','PK10_game_tip_11');
						gameType_emp.toolTip = resourceManager.getString('LotteryTips','PK10_game_tip_emp_11');
						TitleNameBtn.label = resourceManager.getString('LotteryTips','first');
						showPlayContainer(playContainer1);
						break;
					case "play_20":
						sntuo = 0;
						playType = 2;
						gameType.text = resourceManager.getString('LotteryTips','PK10_game_tip_12');
						gameType_emp.toolTip = resourceManager.getString('LotteryTips','PK10_game_tip_emp_12');
						TitleNameBtn.label = resourceManager.getString('LotteryTips','second');
						showPlayContainer(playContainer1);
						break;
					case "play_21":
						sntuo = 0;
						playType = 3;
						gameType.text = resourceManager.getString('LotteryTips','PK10_game_tip_13');
						gameType_emp.toolTip = resourceManager.getString('LotteryTips','PK10_game_tip_emp_13');
						TitleNameBtn.label = resourceManager.getString('LotteryTips','third');
						showPlayContainer(playContainer1);
						break;
				}
			}
			
			private function showPlayContainer(container:DisplayObject):void
			{
				selectedPlayContainer.visible = false;
				(selectedPlayContainer as UIComponent).includeInLayout = false;
				container.visible = true;
				(container as UIComponent).includeInLayout = true;
				selectedPlayContainer = container;
			}
			
			protected function clearTextAreaBtn_clickHandler(event:MouseEvent):void
			{
				clearAll();
				bettingInfo.tzzs = 0;
				dispatchEvent(new BetsClickEvent(BetsClickEvent.NUMBER_STICK,bettingInfo));
			}
			
			
			private function clearSelectedNumbers():void
			{
				singleBtn.selected = false;
				doubleBtn.selected = false;
				selectNumbersArr = [];
			}
			
			public function clearAll(e:BetsClickEvent = null):void
			{
				clearSelectedNumbers();
			}
			
			protected function one_clickHandler(event:MouseEvent):void
			{
				var btnTemp:ToggleButton = event.target as ToggleButton;
				if(btnTemp.selected==true){
					selectNumbersArr.push(btnTemp.name);
				}else{
					selectNumbersArr.splice(selectNumbersArr.indexOf(btnTemp.name),1);
				}
				selectNumbersArr.sort();
				bettingInfo.tzzs = selectNumbersArr.length;
				bettingInfo.tzcontent = selectNumbersArr.toString();
				dispatchEvent(new BetsClickEvent(BetsClickEvent.CONFIRM_BTN_ENABLE, bettingInfo));
			}
			
		]]>
	</fx:Script>
	<fx:Metadata>
		[ResourceBundle("LotteryTips")]
	</fx:Metadata>
	<s:SkinnableContainer backgroundColor="0xcfcece" width="100%">
		<s:layout>
			<s:VerticalLayout verticalAlign="middle" gap="4" paddingLeft="15" paddingTop="8" paddingRight="15" paddingBottom="8"/>
		</s:layout>
		<s:HGroup width="100%" verticalAlign="middle" gap="4">
			<s:ToggleButton id="play_19" label="{resourceManager.getString('LotteryTips','first')}" styleName="standardButtonSkinStyle"
							selected="{playType == 1}" click="playClickHandler(event)"/>
			<s:ToggleButton id="play_20" label="{resourceManager.getString('LotteryTips','second')}" styleName="standardButtonSkinStyle"
							selected="{playType == 2}" click="playClickHandler(event)"/>
			<s:ToggleButton id="play_21" label="{resourceManager.getString('LotteryTips','third')}" styleName="standardButtonSkinStyle"
							selected="{playType == 3}" click="playClickHandler(event)"/>
		</s:HGroup>
	</s:SkinnableContainer>
	<s:Group width="100%" height="34">
		<s:HGroup width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingLeft="15">
			<s:Label text="玩法说明：" styleName="labelStyles2"/>
			<s:Label id="gameType"  text="{resourceManager.getString('LotteryTips','PK10_game_tip_11')}" styleName="labelStyles2"/>
		</s:HGroup>
		<s:HGroup width="100%" height="100%" horizontalAlign="right" verticalAlign="middle" paddingRight="8">
			<s:Button label="范例" id="gameType_emp" skinClass="css.skin1.universal.TipBtnSkin"  toolTipShow="{Util.getInstance().showToolTips(event)}"
					  toolTip="{resourceManager.getString('LotteryTips','PK10_game_tip_emp_11')}"/>
		</s:HGroup>
	</s:Group>
	<s:Image source="@Embed('css/skin1/universal/images/005_03.png')" width="100%" fillMode="repeat"/>
	<s:HGroup id="playContainer1" width="100%" height="310" gap="20" verticalAlign="middle" horizontalAlign="left" paddingLeft="15">
		<s:Button id="TitleNameBtn" styleName="orderButtonSkinStyle_mid" label="{resourceManager.getString('LotteryTips','first')}"/>
		<s:HGroup height="100%" gap="8" verticalAlign="middle">
			<s:ToggleButton id="singleBtn" label="{resourceManager.getString('LotteryTips','odd')}" styleName="numberSelectSkinStyle_large" name="2" click="one_clickHandler(event)"/>
			<s:ToggleButton id="doubleBtn" label="{resourceManager.getString('LotteryTips','even')}" styleName="numberSelectSkinStyle_large" name="3" click="one_clickHandler(event)"/>
		</s:HGroup>
	</s:HGroup>
</s:VGroup>
