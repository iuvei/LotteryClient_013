<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 initialize="screationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.xazc.event.BetsClickEvent;
			
			import mx.events.FlexEvent;
			
			import spark.components.ToggleButton;
			private var _bettingRowName:String = "";
			
			public var selectedNum:Array;
			
			public var btnLabelStyle:String = "";
			protected function screationCompleteHandler(event:FlexEvent):void
			{
				selectedNum = [];
				for (var i:int = 1; i < 7; i++)
				{
					var tog:ToggleButton = new ToggleButton();
					switch(btnLabelStyle)
					{
						case "111":
						{
							tog.label = i.toString()+i.toString()+i.toString();
							break;
						}
						case "11*":
						{
							tog.label = i.toString()+i.toString()+"*";
							break;
						}
						case "11":
						{
							tog.label = i.toString()+i.toString();
							break;
						}
						case "1":
						{
							tog.label = i.toString();
							break;
						}
					}
					tog.styleName = "numberSelectSkinStyle_large";
					addBets.addElement(tog);
					tog.addEventListener(MouseEvent.CLICK, bettingNum_clickHandler);
				}
			}
			
			
			public function clearAllSelectedNumHandler():void
			{
				for (var i:int = 0; i < 6; i++)
				{
					var tog:ToggleButton = addBets.getElementAt(i) as ToggleButton
					tog.selected = false;
				}
				selectedNum = [];
			}
			
			protected function bettingNum_clickHandler(event:MouseEvent):void
			{
				var TogBtn:ToggleButton = event.target as ToggleButton;
				for (var i:int = 0; i < 6; i++)
				{
					var tog:ToggleButton = addBets.getElementAt(i) as ToggleButton;
					if(tog.label != TogBtn.label)
					{
						if(tog.selected)
							selectedNum.splice(selectedNum.indexOf(TogBtn.label),1);
						tog.selected = false;
					}
					else
					{
						if(TogBtn.selected == true){
							selectedNum.push(TogBtn.label);
						}else{
							selectedNum.splice(selectedNum.indexOf(TogBtn.label),1);
						}
					}
				}
				
				dispatchEvent(new BetsClickEvent(BetsClickEvent.BETS_NUMBER_CLICK));
			}
			
			[Bindable]
			public function get bettingRowName():String
			{
				return _bettingRowName;
			}
			
			public function set bettingRowName(value:String):void
			{
				_bettingRowName = value;
				needSpace.width = 4;
				if(value.length == 2)
				{
					bettingName.styleName = "orderButtonSkinStyle_Two";
					if(value == "单号")
						needSpace.width = 25;
				}
				else if(value.length == 3)
				{
					bettingName.styleName = "orderButtonSkinStyle_Three";
				}
				else if(value.length == 4)
				{
					bettingName.styleName = "orderButtonSkinStyle_Fourth";
				}
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Metadata>
		[ResourceBundle("LotteryTips")]
	</fx:Metadata>
	<s:HGroup height="100%" verticalAlign="middle" gap="4">
		<s:HGroup height="100%" verticalAlign="middle">
			<s:Button id="bettingName" styleName="orderButtonSkinStyle_Two" label="{bettingRowName}"/>
		</s:HGroup>
		<s:Spacer id="needSpace" width="4"/>
		<s:TileGroup id="addBets" requestedColumnCount="6" verticalGap="12" horizontalGap="8">
		</s:TileGroup>
	</s:HGroup>
</s:Group>
