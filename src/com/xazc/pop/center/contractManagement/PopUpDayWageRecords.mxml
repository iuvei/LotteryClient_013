<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="createGridInitProperties()"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:load="com.xazc.components.load.*" width="900" height="455"
		 xmlns:common="com.xazc.pop.center.common.*" xmlns:single="com.xazc.single.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:DateFormatter id="df" formatString="YYYY-MM-DD JJ:NN:SS"/>
		<mx:DateFormatter id="df1" formatString="YYYY-MM-DD"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.components.bettings.AlertMsgCenter;
			import com.xazc.event.CustomEvent;
			import com.xazc.event.JumpEvent;
			import com.xazc.event.Sendnotification;
			import com.xazc.event.SystemEvent;
			import com.xazc.single.CurrentBusinessInfo;
			import com.xazc.single.CurrentUserInfo;
			import com.xazc.single.Util;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.DynamicEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var service:ServerToolImpl;
			private var messages:Array=[];//保留查询数据
			private var myPattern1:RegExp=/-|:| /g; 
			public var currentPage:int=1;//当前页
			private var currentPageSize:int=4;//当页行数
			private var alert:AlertMsgCenter = new AlertMsgCenter();
			
			private var titles:ArrayCollection=new ArrayCollection([
				{title:"a",w:129},
				{title:"b",w:129},
				{title:"c",w:109},
				{title:"d",w:109},
				{title:"e",w:109},
				{title:"f",w:129},
				{title:"g",w:189},
			]);
			
			private var values:ArrayCollection=new ArrayCollection([
				{column:"User_Name",w:129},
				{column:"DetailSource",w:129},
				{column:"BettingAmount",w:109},
				{column:"LossAmount",w:109},
				{column:"DayWagesRatio",w:109},
				{column:"DayWagesAmount",w:129},
				{column:"CreateTime",w:189},
			]);
			
			/**
			 *初始化信息 
			 ***/
			private function createGridInitProperties():void{
				var count:int=0;
				//初始化表头
				var titleGrid:Grid=new Grid();
				var titlerow:GridRow=new GridRow();
				for(var i:int=0;i<titles.length;i++){
					titlerow.height=30;
					var gridItem:GridItem=new GridItem();
					gridItem.width=titles.getItemAt(i).w;
					var label:Label=new Label();
					if(titles.getItemAt(i).title == "a"){
						label.text = "用户名";
					}else if(titles.getItemAt(i).title == "b"){
						label.text = "发放类型";
					}else if(titles.getItemAt(i).title == "c"){
						label.text = "投注总额";
					}else if(titles.getItemAt(i).title == "d"){
						label.text = "盈亏总额";
					}else if(titles.getItemAt(i).title == "e"){
						label.text = "日工资比例";
					}else if(titles.getItemAt(i).title == "f"){
						label.text = "日工资金额";
					}else if(titles.getItemAt(i).title == "g"){
						label.text = "时间";
					}
					label.styleName="personalCenterDetailLabelStyle_1_white";
					gridItem.addChild(label);
					titlerow.addChild(gridItem);
					titleGrid.addChild(titlerow);
					count +=titles.getItemAt(i).w;
				}
				vg.addElementAt(titleGrid,0);
				//初始化提示
				var promptGrid:Grid=new Grid();
				var promptRow:GridRow=new GridRow();
				for(var j:int=0;j<titles.length;j++){
					promptRow.height=30;
					var promptItem:GridItem=new GridItem();
					promptItem.width=titles.getItemAt(j).w;
					var label1:Label=new Label();
					label1.text="";
					label1.styleName="personalCenterDetailLabelStyle_1"; 
					promptItem.addChild(label1);
					promptRow.addChild(promptItem);
					promptGrid.addChild(promptRow);
				}
				vg.addElementAt(promptGrid,1);
				
				var count:int=0;
				//初始化表头
				var titleGrid:Grid=new Grid();
				var titlerow:GridRow=new GridRow();
				for(var i:int=0;i<titles.length;i++){
					titlerow.height=30;
					var gridItem:GridItem=new GridItem();
					gridItem.width=titles.getItemAt(i).w;
					var label:Label=new Label();
					if(titles.getItemAt(i).title == "a"){
						label.text = "用户名";
					}else if(titles.getItemAt(i).title == "b"){
						label.text = "发放类型";
					}else if(titles.getItemAt(i).title == "c"){
						label.text = "投注总额";
					}else if(titles.getItemAt(i).title == "d"){
						label.text = "盈亏总额";
					}else if(titles.getItemAt(i).title == "e"){
						label.text = "日工资比例";
					}else if(titles.getItemAt(i).title == "f"){
						label.text = "日工资金额";
					}else if(titles.getItemAt(i).title == "g"){
						label.text = "时间";
					}
					label.styleName="personalCenterDetailLabelStyle_1_white";
					gridItem.addChild(label);
					titlerow.addChild(gridItem);
					titleGrid.addChild(titlerow);
					count +=titles.getItemAt(i).w;
				}
				vg_2.addElementAt(titleGrid,0);
				//初始化提示
				var promptGrid:Grid=new Grid();
				var promptRow:GridRow=new GridRow();
				for(var j:int=0;j<titles.length;j++){
					promptRow.height=30;
					var promptItem:GridItem=new GridItem();
					promptItem.width=titles.getItemAt(j).w;
					var label1:Label=new Label();
					label1.text="";
					label1.styleName="personalCenterDetailLabelStyle_1"; 
					promptItem.addChild(label1);
					promptRow.addChild(promptItem);
					promptGrid.addChild(promptRow);
				}
				vg_2.addElementAt(promptGrid,1);
				//初始化
				refrenshView();
			}
			
			/**
			 *初始化 
			 **/
			public function refrenshView():void{
				loading.splicePromptLanguage(3,"");
				loading.resume();
				initPropertys();
				currentPage=1;
				//获取日工资记录 
				getDayWagesRecordsList();
				//获取日工资记录 
				getDayWagesRecordsList_2();
			}
			
			/**
			 *获取日工资记录 
			 **/
			private function getDayWagesRecordsList():void{
				if(service==null){
					service=new ServerToolImpl();
				}
				var obj:Object=filterSelectCondition();
				obj.IsSelf=1;//0：自身，1：直属下级
				service.getDayWagesRecordsList(obj,getUserDrawingInfoHandler);
			}
			private function getDayWagesRecordsList_2():void{
				if(service==null){
					service=new ServerToolImpl();
				}
				var obj:Object=filterSelectCondition();
				obj.User_Name="";
				obj.IsSelf=0;//0：自身，1：直属下级
				service.getDayWagesRecordsList(obj,getUserDrawingInfoHandler_2);
			}
			private function getUserDrawingInfoHandler(e:ResultEvent):void{
				loading.suspend();
				trace(e.result.toString());
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(obj.SystemState==64){
					messages=obj.GetWayWagesList as Array;
					if(messages.length==0){
						createGridOneRow()
						return;
					}
					updateViewPropertysValue(obj.GetWayWagesList as Array);
					page.setPage(currentPage,obj.PageCount,obj.DataCount);		
					g_page.visible=true;
					g_page.includeInLayout=true;
					
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					if(obj.SystemState==32){
						createGridOneRow();
						return;
					}
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_recharge_records_state1'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			private function getUserDrawingInfoHandler_2(e:ResultEvent):void{
				loading.suspend();
				trace(e.result.toString());
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(obj.SystemState==64){
					messages=obj.GetWayWagesList as Array;
					if(messages.length==0){
						createGridOneRow_2();
						return;
					}
					updateViewPropertysValue_2(obj.GetWayWagesList as Array);
					page_2.setPage(currentPage,obj.PageCount,obj.DataCount);		
					g_page_2.visible=true;
					g_page_2.includeInLayout=true;
					
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					if(obj.SystemState==32){
						createGridOneRow_2();
						return;
					}
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_recharge_records_state1'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			private function updateViewPropertysValue(list:Array):void{
				var grid:Grid=vg.getChildAt(1) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				for(var i:int=0;i<list.length;i++){
					var row:GridRow=new GridRow();
					row.height=30;
					grid.addChild(row);
					for(var j:int=0;j<values.length;j++){
						var item:GridItem=new GridItem();
						row.addChild(item);
						item.width=values.getItemAt(j).w;
						var lb:Label=new Label();
						lb.styleName="personalCenterDetailLabelStyle_1";
						lb.width=values.getItemAt(j).w-5;
						item.addChild(lb);
						var strColumn:String=values.getItemAt(j).column;
						var strvalue:String="";
						if(strColumn=="CreateTime"){
							lb.text=df.format(list[i][strColumn]);
						}else if(strColumn=="DetailSource"){
							//（发放类型 -1:全部，301:系统发放，263:来自上级的日工资，264:发给下级的日工资，265:人工添加日工资，266:人工扣除日工资）
							if( list[i][strColumn] == "-1"){lb.text="全部";}
							else if( list[i][strColumn] == "301"){lb.text="系统发放";}
							else if( list[i][strColumn] == "263"){lb.text="来自上级的日工资";}
							else if( list[i][strColumn] == "264"){lb.text="发给下级的日工资";}
							else if( list[i][strColumn] == "265"){lb.text="人工添加日工资";}
							else if( list[i][strColumn] == "266"){lb.text="人工扣除日工资";}
						}else{
							lb.text=list[i][strColumn];
						}
					}
				}
			}
			private function updateViewPropertysValue_2(list:Array):void{
				var grid:Grid=vg_2.getChildAt(1) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				for(var i:int=0;i<list.length;i++){
					var row:GridRow=new GridRow();
					row.height=30;
					grid.addChild(row);
					for(var j:int=0;j<values.length;j++){
						var item:GridItem=new GridItem();
						row.addChild(item);
						item.width=values.getItemAt(j).w;
						var lb:Label=new Label();
						lb.styleName="personalCenterDetailLabelStyle_1";
						lb.width=values.getItemAt(j).w-5;
						item.addChild(lb);
						var strColumn:String=values.getItemAt(j).column;
						var strvalue:String="";
						if(strColumn=="CreateTime"){
							lb.text=df.format(list[i][strColumn]);
						}else if(strColumn=="DetailSource"){
							//（发放类型 -1:全部，301:系统发放，263:来自上级的日工资，264:发给下级的日工资，265:人工添加日工资，266:人工扣除日工资）
							if( list[i][strColumn] == "-1"){lb.text="全部";}
							else if( list[i][strColumn] == "301"){lb.text="系统发放";}
							else if( list[i][strColumn] == "263"){lb.text="来自上级的日工资";}
							else if( list[i][strColumn] == "264"){lb.text="发给下级的日工资";}
							else if( list[i][strColumn] == "265"){lb.text="人工添加日工资";}
							else if( list[i][strColumn] == "266"){lb.text="人工扣除日工资";}
						}else{
							lb.text=list[i][strColumn];
						}
					}
				}
			}
			
			/**
			 * 查询结果无数据时创建
			 **/
			private function createGridOneRow():void{
				g_page.visible=false;
				g_page.includeInLayout=false;
				var gt:Grid=vg.getChildAt(0) as Grid;
				var grid:Grid=vg.getChildAt(1) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=gt.width;
				row.addChild(item);
				var label:Label=new Label();
				label.text=resourceManager.getString('PersonalCenterPage','no_Data');
				label.styleName="personalCenterDetailLabelStyle_1";
				item.addChild(label);
			}
			private function createGridOneRow_2():void{
				g_page_2.visible=false;
				g_page_2.includeInLayout=false;
				var gt:Grid=vg_2.getChildAt(0) as Grid;
				var grid:Grid=vg_2.getChildAt(1) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=gt.width;
				row.addChild(item);
				var label:Label=new Label();
				label.text=resourceManager.getString('PersonalCenterPage','no_Data');
				label.styleName="personalCenterDetailLabelStyle_1";
				item.addChild(label);
			}
			/**
			 *过滤封装查询条件
			 **/
			private function filterSelectCondition():Object{
				var obj:Object=new Object();
				obj.User_Name=input_username.text;
				obj.UserID=CurrentUserInfo.myUserID;
				//obj.IsSelf=value;//0：自身，1：直属下级
				if(df_start.text && df_end.text){
					obj.BeginTime=df_start.text+" 00:00:00";
					obj.EndTime=df_end.text+" 23:59:59";
				}
				obj.CurrentPageIndex=currentPage-1;
				obj.CurrentPageSize=currentPageSize;
				return obj;
			}
			protected function df_start_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if(df_start.text==""){
					return;
				}
				var str:Array=df_start.text.split("-");
				var temp:Date = new Date();
				df_end.disabledRanges=[{rangeStart:new Date(temp.fullYear,temp.month,temp.date+1)},{rangeEnd:new Date(int(str[0]),int(str[1])-1,int(str[2])-1)}];
			}
			protected function df_end_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				// TODO Auto-generated method stub
				if(df_end.text==""){
					return;
				}
				var str:Array=df_end.text.split("-");
				var temp:Date = new Date();
				df_start.disabledRanges=[{rangeStart:new Date(int(str[0]),int(str[1])-1,int(str[2])+1)},{rangeEnd:new Date(temp.fullYear,temp.month,temp.date-33)}];
				
				
			}
			protected function page_ChangePageIndexHandler(event:CustomEvent):void
			{
				loading.splicePromptLanguage(3,"");
				loading.resume();
				var page:int=int(event.body);
				currentPage=page;
				getDayWagesRecordsList();
			}
			protected function page_ChangePageIndexHandler_2(event:CustomEvent):void
			{
				loading.splicePromptLanguage(3,"");
				loading.resume();
				var page:int=int(event.body);
				currentPage=page;
				getDayWagesRecordsList_2();
			}
			/**
			 *初始化页面信息 
			 **/
			private function initPropertys():void{
				//默认实现
				this.timeType_changeHandler(null);
				page.pageSelector.text="";
			}
			/**
			 *校验查询条件 
			 **/
			private function checkPropertys():Boolean{
				if(df_start.text!="" && df_end.text==""){
					df_start.text="";
					df_end.text="";
					df_start.disabledRanges=[];
					df_end.disabledRanges=[];
					df_start.selectedDate=null;
					df_end.selectedDate=null;
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_proxy_recharge_check1'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					return false;
				}
				if(df_start.text=="" && df_end.text!=""){
					df_start.text="";
					df_end.text="";
					df_start.disabledRanges=[];
					df_end.disabledRanges=[];
					df_start.selectedDate=null;
					df_end.selectedDate=null;
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_proxy_recharge_check1'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					return false;
				}
				if(df_start.text!="" && df_end.text!=""){
					var start:String=df.format(df_start.text);
					start=start.replace(myPattern1,"");
					var end:String=df.format(df_end.text);
					end=end.replace(myPattern1,"");
					if(start>end){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_proxy_recharge_check2'),
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return false;
					}
				}
				return true;
			}
			/**
			 *查询操作 
			 **/
			protected function submit(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(!checkPropertys())
					return;
				loading.splicePromptLanguage(3,"");
				loading.resume();
				currentPage=1;
				getDayWagesRecordsList();
				getDayWagesRecordsList_2();
			}
			
			private function yd_clickHandler(e:SystemEvent):void{
				Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
			}
			/**
			 *	切换查询区间时执行
			 *
			 */
			protected function timeType_changeHandler(event:IndexChangeEvent):void
			{
				var d:Date=new Date();
				//开始时间默认时间
				df_start.selectedDate=new Date();
				df_start.text=df1.format(df_start.selectedDate);
				//开始时间可选设置
				df_start.disabledRanges=[{rangeStart:new Date(d.fullYear,d.month,d.date+1)},{rangeEnd:new Date(d.fullYear,d.month-3,d.date+1)}];
				//结束时间默认时间
				df_end.selectedDate= new Date();
				df_end.text=df1.format(df_end.selectedDate);
				//结束时间可选设置
				df_end.disabledRanges=[{rangeStart:new Date(d.fullYear,d.month,d.date+1)},{rangeEnd:new Date(df_start.selectedDate.fullYear,df_start.selectedDate.month,df_start.selectedDate.date-1)}];
			}
		]]>
	</fx:Script>
	<fx:Metadata>
		[ResourceBundle("PersonalCenterPage")]
	</fx:Metadata>
	<!-- 过滤条件 -->
	<s:HGroup id="vg_main" top="10" verticalAlign="middle" width="100%" gap="0">
		<mx:Label text="{resourceManager.getString('PersonalCenterPage','userName')}：" styleName="personalCenterDetailLabelStyle_1"/>
		<mx:TextInput id="input_username"  styleName="personalCenterDetailTextInputStyle" width="80"/>
		<s:Spacer width="15" />
		<mx:Label text="{resourceManager.getString('PersonalCenterPage','trad_Time2')}：" styleName="personalCenterDetailLabelStyle_1"/>
		<single:MyDateField width="120" id="df_start" styleName="personalCenterDateFieldStyle" formatString="YYYY-MM-DD"
							change="df_start_changeHandler(event)" buttonMode="true"/>
		<mx:Label text="至" styleName="personalCenterDetailLabelStyle_1"/>
		<single:MyDateField width="120" id="df_end" styleName="personalCenterDateFieldStyle" formatString="YYYY-MM-DD"  
							change="df_end_changeHandler(event)" buttonMode="true"/>
		<s:Spacer width="15" />
		<s:Button label="{resourceManager.getString('PersonalCenterPage','ensure')}" styleName="personalLookButtonStyle" 
				  click="submit(event)" buttonMode="true" verticalCenter="0"/> 	
	</s:HGroup>
	<s:HGroup top="{vg_main.height+15}" verticalAlign="middle" height="30">
		<mx:Label text="直属下级日工资" styleName="personalCenterDetailLabelStyle_1" color="0x000000"  />
	</s:HGroup>
	<!--具体内容 1-->
	<s:Group top="{vg_main.height+45}" id="group_1">
		<s:Rect id="fill" width="100%" height="100%">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xffffff" alpha="0"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:Rect id="fill1" width="100%" height="30">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x6a6969" alpha="1"/>
					<s:GradientEntry color="0x595858" alpha="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" gap="-1" id="vg">
			<s:Group height="35"   width="100%" id="g_page" visible="false" includeInLayout="false">
				<s:Rect x="0" id="border" width="100%" height="100%">
					<s:fill>
						<s:LinearGradient >
							<s:GradientEntry color="0xcfcece" alpha="1"/>
						</s:LinearGradient>
					</s:fill>
					<s:stroke>
						<s:LinearGradientStroke>
							<s:GradientEntry color="0xc9d2dc"/>
						</s:LinearGradientStroke>
					</s:stroke>
				</s:Rect>
				<s:VGroup  left="10" right="10" height="100%" verticalAlign="middle" gap="0">
					<s:HGroup horizontalAlign="right" verticalAlign="middle" height="100%" width="100%">
						<common:PopUpChangePageComponent width="100%" height="100%" id="page" ChangePageIndex="page_ChangePageIndexHandler(event)"/>
					</s:HGroup>
				</s:VGroup>
			</s:Group>
		</s:VGroup>
		<!-- 查询进度 -->
		<load:LoadingGroup width="100%" height="100%" visible="false" id="loading"/>
	</s:Group>
	<s:HGroup top="{group_1.height+50}" verticalAlign="middle" height="30">
		<mx:Label text="自身日工资" styleName="personalCenterDetailLabelStyle_1" color="0x000000"  />
	</s:HGroup>
	<!--具体内容 2-->
	<s:Group top="{group_1.height+80}" >
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xffffff" alpha="0"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:Rect width="100%" height="30">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x6a6969" alpha="1"/>
					<s:GradientEntry color="0x595858" alpha="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" gap="-1" id="vg_2">
			<s:Group height="35"   width="100%" id="g_page_2" visible="false" includeInLayout="false">
				<s:Rect x="0" width="100%" height="100%">
					<s:fill>
						<s:LinearGradient >
							<s:GradientEntry color="0xcfcece" alpha="1"/>
						</s:LinearGradient>
					</s:fill>
					<s:stroke>
						<s:LinearGradientStroke>
							<s:GradientEntry color="0xc9d2dc"/>
						</s:LinearGradientStroke>
					</s:stroke>
				</s:Rect>
				<s:VGroup  left="10" right="10" height="100%" verticalAlign="middle" gap="0">
					<s:HGroup horizontalAlign="right" verticalAlign="middle" height="100%" width="100%">
						<common:PopUpChangePageComponent width="100%" height="100%" id="page_2" ChangePageIndex="page_ChangePageIndexHandler_2(event)"/>
					</s:HGroup>
				</s:VGroup>
			</s:Group>
		</s:VGroup>
		<!-- 查询进度 -->
		<load:LoadingGroup width="100%" height="100%" visible="false" id="loading_2"/>
	</s:Group>
</s:Group>
