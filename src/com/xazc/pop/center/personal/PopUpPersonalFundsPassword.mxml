<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   width="100%" height="100%" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()" xmlns:common="com.xazc.pop.center.common.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerTool;
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.components.bettings.AlertMsg;
			import com.xazc.components.bettings.AlertMsgCenter;
			import com.xazc.event.JumpEvent;
			import com.xazc.event.Sendnotification;
			import com.xazc.event.SystemEvent;
			import com.xazc.single.CurrentUserInfo;
			import com.xazc.single.PersonCenterInfo;
			import com.xazc.single.PopKeyBoardManager;
			import com.xazc.single.Util;
			
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			public var markID:String="1010400";
			public static var markID:String="1010400";
			[Bindable]
			public var labelTitleText:String="资金密码";
			
			private var alert:AlertMsgCenter = new AlertMsgCenter();
			
			public var initializeCompleteFlag:Boolean=false;//标识是否初始化完成
			
			private var regexp:RegExp=/^[A-Za-z0-9]+$/;
			
			private var pswTest:RegExp = /^(?=.{6,16})(?=.*[a-zA-Z])(?=.*[0-9])[0-9a-zA-Z]*$/;
			
			
			
			private var service:ServerToolImpl;
			/**
			 * 初始化
			 **/
			private function init():void{
				checkPayPsw();
			}
			/**
			 *检查 
			 **/
			public function checkPayPsw():void{
				initBlockPropertys();
				if(service==null){
					service=new ServerToolImpl();
				}
				trace("*******个人中心》我的资料》银行密码******");
				service.checkPayOutPwdAndTransferPwd(new Object(),checkPayPswHandler);
			}
			private function checkPayPswHandler(e:ResultEvent):void{
				trace(e.result.toString());
				var obj:Object=JSON.parse(e.result.toString(),null);
				if(obj.hasOwnProperty("SystemState")){
					if(obj.SystemState==-1){
						//跳转登录页面
						Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
						return;
					}else if(obj.SystemState==-2){
						var yd:AlertMsgCenter=new AlertMsgCenter();
						yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),resourceManager.getString('PersonalCenterPrompt','alert_title'),2);
						yd.okBtnBoolean=true;
						yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);
					}
				}
				
				if(obj.Result==1){
					var context:Array=obj.Context as Array;
					if(context[0].PayOutPassWord==1){
						
						modify_group.visible = false;
						modify_group.includeInLayout = false;
						password_group.visible = false;
						password_group.includeInLayout = false;
//						//随机获取密保问题
//						getRandomQuestion();
						
						//是否存在密保；
						getSecurity_state()
						
						oldHg.visible=true;
						oldHg.includeInLayout=true;
						if(PersonCenterInfo.userInfoDetail){
							PersonCenterInfo.IsPayPsw=true;	
						}
					}else{
						
						modify_group.visible = false;
						modify_group.includeInLayout = false;
						password_group.visible = true;
						password_group.includeInLayout = true;
						
						oldHg.visible=false;
						oldHg.includeInLayout=false;
						if(PersonCenterInfo.userInfoDetail){
							PersonCenterInfo.IsPayPsw=false;
						}
					}
				}
			}
			
			/**
			 *   是否存在密保；
			 **/
			protected function getSecurity_state():void
			{
				//（查询密保接口）
				var serverTool:ServerTool = new ServerToolImpl();
				var obj:Object = new Object();
				obj.UserID = CurrentUserInfo.myUserID;
				obj.FlagType = "1";     //类型（1：密保 2：提示语）
				serverTool.getSecurityPromptingState(obj,getSecurityPromptingStateHandler);
			}
			private function getSecurityPromptingStateHandler(e:ResultEvent):void{
				var arr:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(arr.SystemState==64){
					
					if(arr.Result == 1){
						//已设置
						PersonCenterInfo.IsSecurityState = true;
						//随机获取密保问题
						getRandomQuestion();
					}else if(arr.Result == 0){
						alert.show("请先设置密保，再修改资金密码！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
						//未设置
						PersonCenterInfo.IsSecurityState = false;
						if(!PersonCenterInfo.IsSecurityState){
							dispatchEvent(new Event("requestSecurityEvent",true));
						}
					}
				}else{
					alert.show("获取密保状态失败！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			/**
			 *   随机获取密保问题
			 **/
			protected function getRandomQuestion():void
			{
				// 随机获取密保答案问题
				service=new ServerToolImpl();
				var obj:Object = new Object();
				obj.UserID = CurrentUserInfo.myUserID;
				obj.FlagType = "1";     //类型（1：密保 2：提示语）
				service.getRandomSecurity(obj,getRandomSecurityHandler);
			}
			private var random_obj:Object;
			private function getRandomSecurityHandler(e:ResultEvent):void{
				var arr:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(arr.SystemState==64){
					
					question_0.text = "";
					question_0_answer.text = "";
					modify_group.visible = true;
					modify_group.includeInLayout = true;
					
					//保存随机问题实体数据；
					random_obj  = new Object();
					random_obj = (arr.SecurityQuestionAnswerModels[0]) as Object;
					question_0.text  = random_obj.Question;
				}else if(arr.SystemState==-1){
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(arr.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);
				}else{
					alert.show(arr.StateMark,resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			public function menu_clickHandler(index:int):void
			{
				if(index==3){
					question_0.text = "";
					question_0_answer.text = "";
					modify_group.visible = false;
					modify_group.includeInLayout = false;
				}else if(index==4){
					if(question_0_answer.text == ""){
						alert.show("请填写密保答案！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return;
					}
					//验证随机问题答案是否正确；
					service=new ServerToolImpl();
					var obj:Object = new Object();
					obj.UserName = CurrentUserInfo.userName;
					obj.RecoveryMode = "2";       //找回方式（1：按资金密码 2：通过密保答案找回）
					obj.SecurityID = random_obj.ID;
					obj.Answer = question_0_answer.text;
					service.retrievePassword(obj,retrievePasswordHandler);
				}
			}
			private function retrievePasswordHandler(e:ResultEvent):void{
				var arr:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(arr.SystemState==64)
				{
					if(arr.Result==1){
						//成功
						alert.show("验证通过！",resourceManager.getString('PersonalCenterPrompt','alert_title'),1);
						
						modify_group.visible = false;
						modify_group.includeInLayout = false;
						password_group.visible = true;
						password_group.includeInLayout = true;
						
					}else if(arr.Result==0){
						alert.show("验证失败！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else if(arr.Result==-1){
						alert.show("资金密码错误！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else if(arr.Result==-2){
						alert.show("用户不存在！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else if(arr.Result==-3){
						alert.show("密保问题或答案有误！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else if(arr.Result==-4){
						alert.show("该用户没有设置密保！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else if(arr.Result==-5){
						alert.show("该用户没有设置资金密码！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}
				}else if(arr.SystemState==-1){
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(arr.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);
				}else{
					alert.show("验证密保答案失败！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			
			
			
			/**
			 *修改资金密码 
			 **/
			private function updateModifyPayPsw():void{
				if(!checkParameters())
					return;
				if(service==null){
					service=new ServerToolImpl();
				}
				service.modifyPayPass({"LogPassword":oldPsw.text,"NewPassword":newPsw.text,"Type":0},updateModifyPayPswHandler);
			}
			private function updateModifyPayPswHandler(e:ResultEvent):void{
				var obj:Object=Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				
				//判断资金密码与登录密码是否一致
				if(obj.hasOwnProperty("Result")){
					if(-2==obj.Result){
						alert.show("资金密码不能和登录密码一致!",
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return;
					}
				}
				
				if(obj.hasOwnProperty("SystemState")){
					if(obj.SystemState==-1){
						//跳转登录页面
						Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
						return;
					}else if(obj.SystemState==-2){
						var yd:AlertMsgCenter=new AlertMsgCenter();
						yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),resourceManager.getString('PersonalCenterPrompt','alert_title'));
						yd.okBtnBoolean=true;
						yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);
					}else{
						if(obj.ErrorState=='-4'){
							alert.show('当前用户已被冻结!',
								resourceManager.getString('PersonalCenterPrompt','alert_title'));
							return;
						}else if(obj.ErrorState=='-5'){
							alert.show('密码输错次数过多，用户已被冻结!',
								resourceManager.getString('PersonalCenterPrompt','alert_title'));
							return;
						}
					}
				}
				trace(e.result.toString());
				if(obj.Result==1){
					PersonCenterInfo.IsPayPsw=true;	
					initBlockPropertys();
					if(!PersonCenterInfo.IsPayPsw){
						var msgBox:AlertMsg=new AlertMsg();
						msgBox.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_state1'),resourceManager.getString('PersonalCenterPrompt','alert_title'),1);
						msgBox.okBtnBoolean=true;
						msgBox.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,onOKMsgBoxCallback);
					}
					else{
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_state1'),resourceManager.getString('PersonalCenterPrompt','alert_title'),1);
					}
//					checkPayPsw();
				}else{
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_state2'),resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			/**
			 *检查 
			 **/
			private function checkParameters():Boolean{
				if(oldHg.visible==true){
					if(oldPsw.text==""){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check1'),
												resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return false;
					}
				}
				if(newPsw.text!="" && confirmPsw.text!=""){
					if(newPsw.text.length<6 || newPsw.text.length>16){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check2'),
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return false;
					}
//					if(confirmPsw.text.length<6 || confirmPsw.text.length>16){
//						alert.show("请输入正确密码的长度","提示信息");
//						return false;
//					}
					if(!pswTest.test(newPsw.text)){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check3'),
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return false;
					}
					if( !pswTest.test(confirmPsw.text)){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check4'),
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
						return false;
					}
					if(newPsw.text!=confirmPsw.text){
						alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check5'),
							resourceManager.getString('PersonalCenterPrompt','alert_title'));
					}else{
						return true;
					}
				}else{
					alert.show(resourceManager.getString('PersonalCenterPrompt','alert_funds_psw_check6'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
				return false;
			}
			
			/**
			 *初始化页面属性 
			 **/
			public function initBlockPropertys():void{
				oldPsw.text="";
				newPsw.text="";
				confirmPsw.text="";
			}
			
			private function yd_clickHandler(e:SystemEvent):void{
				Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
			}
			protected function onOKMsgBoxCallback(e:SystemEvent):void{
				Util.getInstance().dispatchEvent(new SystemEvent(SystemEvent.CLOSE_POP_WINDOWBASE));
//				if(PersonCenterInfo.userInfoDetail.Mobile=="")
//				{
//					dispatchEvent(new Event("requestPhoneNumEvent",true));
//				}
			}
			protected function img_clickHandler(input:TextInput):void
			{
				switch(input)
				{
					case oldPsw:
					{
						if(Util.getInstance().secondPop)
							PopKeyBoardManager.clear();
						if(Util.getInstance().thirdPop)
							PopKeyBoardManager.clear();
						if(!Util.getInstance().firstPop)
							PopKeyBoardManager.show(input);
						else
							PopKeyBoardManager.clear();
						Util.getInstance().firstPop = !Util.getInstance().firstPop;
						Util.getInstance().secondPop = false;
						Util.getInstance().thirdPop = false;
						break;
					}
					case newPsw:
					{
						if(Util.getInstance().firstPop)
							PopKeyBoardManager.clear();
						if(Util.getInstance().thirdPop)
							PopKeyBoardManager.clear();
						if(!Util.getInstance().secondPop)
							PopKeyBoardManager.show(input);
						else
							PopKeyBoardManager.clear();
						Util.getInstance().secondPop = !Util.getInstance().secondPop;
						Util.getInstance().firstPop = false;
						Util.getInstance().thirdPop = false;
						break;
					}
					case confirmPsw:
					{
						if(Util.getInstance().secondPop)
							PopKeyBoardManager.clear();
						if(Util.getInstance().firstPop)
							PopKeyBoardManager.clear();
						if(!Util.getInstance().thirdPop)
							PopKeyBoardManager.show(input);
						else
							PopKeyBoardManager.clear();
						Util.getInstance().thirdPop = !Util.getInstance().thirdPop;
						Util.getInstance().firstPop = false;
						Util.getInstance().secondPop = false;
						break;
					}
				}
			}
		]]>
	</fx:Script>
	<fx:Metadata>
		[ResourceBundle("LotteryPlayNames")]
		[ResourceBundle("PersonalCenterPage")]
	</fx:Metadata>
	
	<s:VGroup width="95%"  top="15" horizontalCenter="0">
		<!-- 修改密保  随机一个问题  放在此处 -->
		<s:VGroup width="100%"  id="modify_group" visible="false" includeInLayout="false">
			<s:HGroup width="100%"  height="30"  verticalAlign="middle">
				<mx:Label  width="10%" textAlign="right" text="验证密保问题：" styleName="personalCenterDetailLabelStyle_4"/>
			</s:HGroup>
			
			<s:HGroup width="100%"  height="30"  verticalAlign="middle">
				<mx:Label text="问题：" width="10%" textAlign="right" styleName="personalCenterDetailLabelStyle_1"/>
				<mx:Label id="question_0"  textAlign="right" styleName="personalCenterDetailLabelStyle_1"/>
			</s:HGroup>
			<s:HGroup width="100%"  height="30"  verticalAlign="middle">
				<mx:Label text="答案：" width="10%" textAlign="right" styleName="personalCenterDetailLabelStyle_1"/>
				<mx:TextInput id="question_0_answer"   styleName="personalCenterDetailTextInputStyle" width="200" maxChars="20"/>
			</s:HGroup>
			<s:HGroup width="100%"  height="45"  verticalAlign="middle">
				<s:Spacer width="10%"/>
				<common:PopUpTabButtonItem id="cancle" labelTitle="取    消" selected="false" click="menu_clickHandler(3)"/>
				<common:PopUpTabButtonItem id="confirm_0" labelTitle="确    认" selected="false" click="menu_clickHandler(4)"/>
			</s:HGroup>
		</s:VGroup>
		
		<s:VGroup width="95%"  top="15" horizontalCenter="0" id="password_group" visible="false" includeInLayout="false">
			<s:Group width="100%" height="34">
				<s:Rect x="2" y="0" width="910" height="33">
					<s:fill>
						<s:SolidColor color="0xf8efd4" />
					</s:fill> 
					<s:stroke> 
						<s:SolidColorStroke color="0xdcc696" weight="1"/> 
					</s:stroke> 
				</s:Rect>
				<s:HGroup x="2" y="0" width="910" height="33" verticalAlign="middle" gap="3" >
					<s:Spacer width="2"/>
					<s:Image source="css/skin1/images/personalCenter/bankinfo_ico.png" />
					<mx:Label styleName="personalCenterBankInfoLabelStyle_red"
							  text="温馨提示：为了提高账户的安全性，资金密码完善后，如需修改，请先设置密保！"/>
				</s:HGroup>
			</s:Group>
			<s:Spacer height="10"/>
			<s:HGroup width="100%" height="35%" horizontalAlign="center" gap="20">
				<s:VGroup width="100%" height="100%" gap="20">
					<s:HGroup id="oldHg" width="100%"  height="30%"  verticalAlign="middle" gap="10">
						<mx:Label text="{resourceManager.getString('PersonalCenterPage','odd_Money_Password')}：" width="20%" styleName="personalCenterDetailLabelStyle_1" textAlign="right"/>
						<s:Group id="groupPersonalOne"  click="img_clickHandler(oldPsw)" buttonMode="true">
							<mx:TextInput id="oldPsw"  styleName="personalCenterDetailTextInputStyle" displayAsPassword="true" enabled="false"/>
							<s:HGroup id="HGroupPersonalOne" width="{oldPsw.width-4}" height="{oldPsw.height}" horizontalAlign="right"  verticalAlign="middle">
								<s:Image id="imageOldPsw"  source="css/skin1/assets/keyboard.png"/>
							</s:HGroup>
						</s:Group>
					</s:HGroup>
					<s:HGroup width="100%"  height="30%"  verticalAlign="middle" gap="10">
						<mx:Label text="{resourceManager.getString('PersonalCenterPage','new_Money_Password')}：" width="20%" styleName="personalCenterDetailLabelStyle_1" textAlign="right"/>
						<s:Group id="groupPersonalTwo" click="img_clickHandler(newPsw)"  buttonMode="true">
							<mx:TextInput id="newPsw"  styleName="personalCenterDetailTextInputStyle" displayAsPassword="true" enabled="false"/>
							<s:HGroup id="HGroupPersonalTwo"  width="{newPsw.width-4}" height="{newPsw.height}" horizontalAlign="right"  verticalAlign="middle">
								<s:Image id="imageNewPsw"  source="css/skin1/assets/keyboard.png"/>
							</s:HGroup>
						</s:Group>
						<mx:Label text="{resourceManager.getString('PersonalCenterPage','money_Password_Tips')}"  styleName="personalCenterDetailLabelStyle_4"/>
					</s:HGroup>
					<s:HGroup width="100%"  height="30%"  verticalAlign="middle" gap="10">
						<mx:Label text="{resourceManager.getString('PersonalCenterPage','ensure_Money_Password')}：" width="20%" styleName="personalCenterDetailLabelStyle_1" textAlign="right"/>
						<s:Group id="groupPersonalThree" click="img_clickHandler(confirmPsw)" buttonMode="true">
							<mx:TextInput id="confirmPsw"  styleName="personalCenterDetailTextInputStyle" displayAsPassword="true" enabled="false"/>
							<s:HGroup id="HGroupPersonalThree" width="{confirmPsw.width-4}" height="{confirmPsw.height}" horizontalAlign="right"  verticalAlign="middle">
								<s:Image id="imageConfirmPsw"  source="css/skin1/assets/keyboard.png"/>
							</s:HGroup>
						</s:Group>
						<mx:Label text="{resourceManager.getString('PersonalCenterPage','money_Password_Tips')}"  styleName="personalCenterDetailLabelStyle_4"/>
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
			<s:HGroup width="760" height="80" paddingTop="10">
				<s:Spacer width="185" height="19"/>
				<s:Button label="{resourceManager.getString('PersonalCenterPage','save')}" styleName="personalSubmitButtonStyle" click="updateModifyPayPsw()" buttonMode="true"/>
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
	
	
</s:Group>
