<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="650" height="550" xmlns:common="com.xazc.pop.center.common.*">
	
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.components.bettings.AlertMsgCenter;
			import com.xazc.event.CustomEvent;
			import com.xazc.event.JumpEvent;
			import com.xazc.event.Sendnotification;
			import com.xazc.event.SystemEvent;
			import com.xazc.single.CurrentUserInfo;
			import com.xazc.single.Util;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Button;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.TextInput;
			
			private var alert:AlertMsgCenter=new AlertMsgCenter();
			private var titles:ArrayCollection=new ArrayCollection([
				{title:"a",w:135},
				{title:"b",w:135},
				{title:"c",w:135},
				{title:"d",w:135},
			]);
			
			private var values:ArrayCollection=new ArrayCollection([
				{column:"ActivePersonNum",w:135},
				{column:"BetMoneyMin",w:135},
				{column:"LossMoneyMin",w:135},
				{column:"DividendRatio",w:135},
			]);
			
			private var save_downID:String;
			private var save_state:String;
			protected function init(event:FlexEvent):void
			{
				
			}
			
			protected function init_view():void
			{
				//初始化表头
				var titleGrid:Grid=new Grid();
				var titlerow:GridRow=new GridRow();
				for(var i:int=0;i<titles.length;i++){
					titlerow.height=30;
					var gridItem:GridItem=new GridItem();
					gridItem.width=titles.getItemAt(i).w;
					var label:Label=new Label();
					if(titles.getItemAt(i).title == "a"){
						label.text = "活跃人数";
					}else if(titles.getItemAt(i).title == "b"){
						label.text = "消费额";
					}else if(titles.getItemAt(i).title == "c"){
						label.text = "亏损额";
					}else if(titles.getItemAt(i).title == "d"){
						label.text = "分红比例";
					}
					label.styleName="personalCenterDetailLabelStyle_1_white";
					gridItem.addChild(label);
					titlerow.addChild(gridItem);
					titleGrid.addChild(titlerow);
				}
				vg_title.addElementAt(titleGrid,0);
				//初始化提示
				var promptGrid:Grid=new Grid();
				var promptRow:GridRow=new GridRow();
				for(var j:int=0;j<titles.length;j++){
					promptRow.height=30;
					var promptItem:GridItem=new GridItem();
					promptItem.width=titles.getItemAt(j).w;
					var label1:Label=new Label();
					label1.text="";
					label1.styleName="personalCenterDetailLabelStyle_1"; 
					promptItem.addChild(label1);
					promptRow.addChild(promptItem);
					promptGrid.addChild(promptRow);
				}
				vg.addElementAt(promptGrid,0);
				
				//初始化表头
				var titleGrid:Grid=new Grid();
				var titlerow:GridRow=new GridRow();
				for(var i:int=0;i<titles.length;i++){
					titlerow.height=30;
					var gridItem:GridItem=new GridItem();
					gridItem.width=titles.getItemAt(i).w;
					var label:Label=new Label();
					if(titles.getItemAt(i).title == "a"){
						label.text = "活跃人数";
					}else if(titles.getItemAt(i).title == "b"){
						label.text = "消费额";
					}else if(titles.getItemAt(i).title == "c"){
						label.text = "亏损额";
					}else if(titles.getItemAt(i).title == "d"){
						label.text = "分红比例";
					}
					label.styleName="personalCenterDetailLabelStyle_1_white";
					gridItem.addChild(label);
					titlerow.addChild(gridItem);
					titleGrid.addChild(titlerow);
				}
				vg_2_title.addElementAt(titleGrid,0);
				//初始化提示
				var promptGrid:Grid=new Grid();
				var promptRow:GridRow=new GridRow();
				for(var j:int=0;j<titles.length;j++){
					promptRow.height=30;
					var promptItem:GridItem=new GridItem();
					promptItem.width=titles.getItemAt(j).w;
					var label1:Label=new Label();
					label1.text="";
					label1.styleName="personalCenterDetailLabelStyle_1"; 
					promptItem.addChild(label1);
					promptRow.addChild(promptItem);
					promptGrid.addChild(promptRow);
				}
				vg_2.addElementAt(promptGrid,0);
				
			}
			public function setData(str:String):void
			{
				init_view();
				
				//获取我的和下级  分红契约
				var target:Object = new Object();
				target.UserID = str.split("#")[0];
				target.DownUserId = str.split("#")[1];
				save_downID = str.split("#")[1];//保存下级的UserID;
				save_state = str.split("#")[3];//保存下级的契约状态;
				SubordinateName.text = str.split("#")[2];//设置下级名字
				var service:ServerToolImpl =new ServerToolImpl();
				service.getMyDownContract(target,getMyDownContractReturn);
			}
			//获取我的和下级  分红契约
			private var messages:Array=[];//保留查询数据
			private var messages_down:Array=[];//保留查询数据
			private  function getMyDownContractReturn(e:ResultEvent):void
			{
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				trace(e.result.toString());
				if(obj.SystemState==64)
				{
					messages=obj.MyContract as Array;
					if(messages.length==0){
						createGridOneRow();
						return;
					}
					updateViewPropertysValue(obj.MyContract as Array);
					
					messages_down=obj.DownContract as Array;
					if(messages_down.length==0){
						createGridOneRow_2();
						return;
					}
					updateViewPropertysValue_2(messages_down);
					
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					alert.show("获取分红契约失败！", resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			/**
			 * 查询结果无数据时创建
			 **/
			private function createGridOneRow():void{
				var gt:Grid=vg.getChildAt(0) as Grid;
				var grid:Grid=vg.getChildAt(0) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=gt.width;
				row.addChild(item);
				var label:Label=new Label();
				label.text=resourceManager.getString('PersonalCenterPage','no_Data');
				label.styleName="personalCenterDetailLabelStyle_1";
				item.addChild(label);
			}
			private function updateViewPropertysValue(list:Array):void{
				var grid:Grid=vg.getChildAt(0) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				for(var i:int=0;i<list.length;i++){
					var row:GridRow=new GridRow();
					row.height=30;
					grid.addChild(row);
					for(var j:int=0;j<values.length;j++){
						var item:GridItem=new GridItem();
						row.addChild(item);
						item.width=values.getItemAt(j).w;
						var lb:Label=new Label();
						lb.styleName="personalCenterDetailLabelStyle_1";
						lb.width=values.getItemAt(j).w-5;
						item.addChild(lb);
						var strColumn:String=values.getItemAt(j).column;
						if(strColumn=="DividendRatio"){
							lb.text= Number((Number(list[i][strColumn])*100).toFixed(6)) + "%";
						}else{
							lb.text=list[i][strColumn];
						}
					}
				}
			}
			/**
			 * 查询结果无数据时创建
			 **/
			private function createGridOneRow_2():void{
				//先创建一条空白数据行；
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				for(var j:int=0;j<values.length;j++){
					var item:GridItem=new GridItem();
					row.addChild(item);
					item.width=values.getItemAt(j).w;
					var lb:TextInput=new TextInput();
					lb.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
					lb.width=values.getItemAt(j).w-5;
					if(3==j){
						lb.restrict="0-9.";
					}else{
						lb.restrict="0-9";
					}
					item.addChild(lb);
					lb.text= "0";
				}
				
				var grid:Grid=new Grid();
				vg_2.addElementAt(grid,1);
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=values.getItemAt(0).w*4-3;
				row.addChild(item);
				var btn_1:Button = new Button();
				btn_1.addEventListener(MouseEvent.CLICK,second_addRowHandle);
				btn_1.label = "添加行";
				item.addChild(btn_1);
			}
			private function updateViewPropertysValue_2(list:Array):void
			{
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				grid.removeAllChildren();//清空所有子项
				for(var i:int=0;i<list.length;i++){
					var row:GridRow=new GridRow();
					row.height=30;
					grid.addChild(row);
					for(var j:int=0;j<values.length;j++){
						var item:GridItem=new GridItem();
						row.addChild(item);
						item.width=values.getItemAt(j).w;
						var lb:TextInput=new TextInput();
						if(3==j){
							lb.restrict="0-9.";
						}else{
							lb.restrict="0-9";
						}
						lb.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
						lb.width=values.getItemAt(j).w-5;
						item.addChild(lb);
						var strColumn:String=values.getItemAt(j).column;
						if(strColumn=="DividendRatio"){
							lb.text= Number((Number(list[i][strColumn])*100).toFixed(6)).toString();
						}else{
							lb.text=list[i][strColumn];
						}
					}
				}
				
				
				var grid:Grid = new Grid();
				vg_2.addElementAt(grid,1);
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=values.getItemAt(0).w*4-3;
				row.addChild(item);
				
				if(list.length > 1){
					var btn_1:Button = new Button();
					btn_1.addEventListener(MouseEvent.CLICK,delete_RowHandle);
					btn_1.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
					btn_1.label = "删  除";
					item.addChild(btn_1);
				}
				
				var btn_2:Button = new Button();
				btn_2.label = "添加行";
				btn_2.addEventListener(MouseEvent.CLICK,first_addRowHandle);
				btn_2.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
				item.addChild(btn_2);
			}
			protected function onFocusIn(event:FocusEvent):void
			{
				event.stopImmediatePropagation();
			}
			
			private function first_addRowHandle(e:MouseEvent):void
			{
				add_RowHandle();
			}
			//添加一行；
			private function add_RowHandle():void
			{
				//先创建一条空白数据行；
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				for(var j:int=0;j<values.length;j++){
					var item:GridItem=new GridItem();
					row.addChild(item);
					item.width=values.getItemAt(j).w;
					var lb:TextInput=new TextInput();
					if(3==j){
						lb.restrict="0-9.";
					}else{
						lb.restrict="0-9";
					}
					lb.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
					lb.width=values.getItemAt(j).w-5;
					item.addChild(lb);
					lb.text= "0";
				}
				//创建操作按钮；
				var grid:Grid=vg_2.getChildAt(1) as Grid;//取出显示内容的grid
				grid.removeAllElements();
				var row:GridRow=new GridRow();
				row.height=30;
				grid.addChild(row);
				var item:GridItem=new GridItem();
				item.width=values.getItemAt(0).w*4-3;
				row.addChild(item);
				var btn_1:Button = new Button();
				btn_1.addEventListener(MouseEvent.CLICK,delete_RowHandle);
				btn_1.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
				btn_1.label = "删  除";
				item.addChild(btn_1);
				var btn_2:Button = new Button();
				btn_2.addEventListener(MouseEvent.CLICK,second_addRowHandle);
				btn_2.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
				btn_2.label = "添加行";
				item.addChild(btn_2);
			}
			
			private function delete_RowHandle(e:MouseEvent):void
			{
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				grid.removeChildAt(grid.numChildren-1);
				messages_down.pop();
				
				//if(grid.numChildren == messages_down.length)
				if(grid.numChildren == 1)
				{
					//创建操作按钮；
					var grid:Grid=vg_2.getChildAt(1) as Grid;//取出显示内容的grid
					grid.removeAllElements();
					var row:GridRow=new GridRow();
					row.height=30;
					grid.addChild(row);
					var item:GridItem=new GridItem();
					item.width=values.getItemAt(0).w*4-3;
					row.addChild(item);
					var btn_2:Button = new Button();
					btn_2.addEventListener(MouseEvent.CLICK,first_addRowHandle);
					btn_2.addEventListener(FocusEvent.FOCUS_IN,onFocusIn);
					btn_2.label = "添加行";
					item.addChild(btn_2);
				}
			}
			private function second_addRowHandle(e:MouseEvent):void
			{
				if(check_add()){
					//添加一行；
					add_RowHandle();
				}
				
			}
			// 效验
			private function check_add():Boolean
			{
				//去最后一行每条数据去判断，是否应该再新加一行；
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				var row:GridRow=grid.getChildAt(grid.numChildren-1) as GridRow;
				for(var j:int=0;j<row.numChildren;j++){
					var item:GridItem=row.getChildAt(j) as GridItem;
					var lb:String = (item.getChildAt(item.numChildren-1) as TextInput).text;
					if(""==lb){(item.getChildAt(item.numChildren-1) as TextInput).text="0";}
					if(j==3)
					{
						if( Number(lb) < 0.001 || Number(lb) > 100)
						{
							alert.show("分红比例范围：\n0.001~100%","提示信息",null);
							return false;
						}
					}
				}
				
				//是否按阶梯排列      最下面一行数据要大于等于前一行的数据 *********************************************************************
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				if(grid.numChildren > 1)
				{
					for(var i:int=0;i<grid.numChildren;i++)
					{
						var row_0:GridRow=grid.getChildAt(grid.numChildren-2) as GridRow;
						var row_1:GridRow=grid.getChildAt(grid.numChildren-1) as GridRow;
						for(var j:int=0;j<row.numChildren;j++){
							var item_0:GridItem=row_0.getChildAt(j) as GridItem;
							var item_1:GridItem=row_1.getChildAt(j) as GridItem;
							var lb_0:String = (item_0.getChildAt(item.numChildren-1) as TextInput).text;
							var lb_1:String = (item_1.getChildAt(item.numChildren-1) as TextInput).text;
							if(  Number(lb_1) < Number(lb_0)){
								alert.show("输入数据错误！","提示信息",null);
								return false;}
						}
					}
				}
				
				
				return true;
			}
			// 效验
			private function check():Boolean
			{
				//是否在数值范围内*********************************************************************
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				for(var i:int=0;i<grid.numChildren;i++)
				{
					var row:GridRow=grid.getChildAt(i) as GridRow;
					for(var j:int=0;j<row.numChildren;j++){
						var item:GridItem=row.getChildAt(j) as GridItem;
						var lb:String = (item.getChildAt(item.numChildren-1) as TextInput).text;
						if(""==lb){
							(item.getChildAt(item.numChildren-1) as TextInput).text = "0";
						}
						if(j == 3){
							if( Number(lb) < 0.001 || Number(lb) > 100){
								alert.show("分红比例范围：\n0.001~100%","提示信息",null);
								return false;}
						}else if(j == 0){
							if( Number(lb) > 9999  ){
								alert.show("活跃人数最大：9999","提示信息",null);
								return false;}
						}else if(j == 1){
							if( Number(lb) > 999999999  ){
								alert.show("消费额最大：999999999","提示信息",null);
								return false;}
						}else if(j == 2){
							if( Number(lb) > 999999999  ){
								alert.show("亏损额最大：999999999","提示信息",null);
								return false;}
						}
					}
				}
				
				//是否按阶梯排列      最下面一行数据要大于等于前一行的数据 *********************************************************************
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				
				
				if(grid.numChildren > 1)
				{
					for(var i:int=0;i<grid.numChildren;i++)
					{
						if(i>0){
							var row_0:GridRow=grid.getChildAt(i-1) as GridRow;
							var row_1:GridRow=grid.getChildAt(i) as GridRow;
							for(var j:int=0;j<row.numChildren;j++){
								var item_0:GridItem=row_0.getChildAt(j) as GridItem;
								var item_1:GridItem=row_1.getChildAt(j) as GridItem;
								var lb_0:String = (item_0.getChildAt(item_0.numChildren-1) as TextInput).text;
								var lb_1:String = (item_1.getChildAt(item_1.numChildren-1) as TextInput).text;
								if(  Number(lb_1) < Number(lb_0)){
									alert.show("输入数据错误！","提示信息",null);
									return false;}
							}
						}
						
						
					}
				}
				
				return true;
			}
			
			/**
			 *  点击按钮的时候
			 * 
			 */
			public function save_clickHandler():void
			{
				if(!check()){
					return;
				}
				
				//发送实体；
				var newDataArr:Array = new Array();
				//原有数据在  messages_down  存在；messages_down=obj.DownContract as Array;
				for(var j:int=0;j<messages_down.length;j++)
				{
					//重新克隆没有IsHistoryData属性的数组；
					var obj_item:Object = new Object();
					//obj_item.ActivePersonNum = messages_down[j].ActivePersonNum
					obj_item.BetMoneyMin = messages_down[j].BetMoneyMin;
					obj_item.LossMoneyMin = messages_down[j].LossMoneyMin;
					obj_item.DividendRatio = messages_down[j].DividendRatio;
					obj_item.BetMoneyMax = messages_down[j].BetMoneyMax;
					obj_item.LossMoneyMax = messages_down[j].LossMoneyMax;
					newDataArr.push(obj_item);
				}
				
				//修改数据 构造发送实体；
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				for(var i:int= 0; i<messages_down.length ;i++)
				{
					var row:GridRow=grid.getChildAt(i) as GridRow;
					var lb_data_Modify:String = new String();
					for(var j:int=0;j<row.numChildren;j++){
						var item:GridItem=row.getChildAt(j) as GridItem;
						var lb:TextInput=item.getChildAt(item.numChildren-1) as TextInput;
						lb_data_Modify += lb.text+ "#";
					}
					newDataArr[i].ActivePersonNum = Number(lb_data_Modify.split("#")[0]);
					newDataArr[i].BetMoneyMin = lb_data_Modify.split("#")[1];
					newDataArr[i].LossMoneyMin = lb_data_Modify.split("#")[2];
					newDataArr[i].DividendRatio = Number((Number(lb_data_Modify.split("#")[3].toString())/100).toFixed(4));
				}
				
				//新加数据 构造发送实体；
				var grid:Grid=vg_2.getChildAt(0) as Grid;//取出显示内容的grid
				for(var i:int= messages_down.length; i< grid.numChildren ;i++)
				{
					var row:GridRow=grid.getChildAt(i) as GridRow;
					var lb_data:String = new String();
					for(var j:int=0;j<row.numChildren;j++){
						var item:GridItem=row.getChildAt(j) as GridItem;
						var lb:TextInput=item.getChildAt(item.numChildren-1) as TextInput;
						lb_data += lb.text+ "#";
					}
					var obj:Object = new Object();
					obj.ActivePersonNum = Number(lb_data.split("#")[0]);
					obj.BetMoneyMin = lb_data.split("#")[1];
					obj.LossMoneyMin = lb_data.split("#")[2];
					obj.DividendRatio = Number((Number(lb_data.split("#")[3].toString())/100).toFixed(4));
					obj.BetMoneyMax = 0;
					obj.LossMoneyMax = 0;
					newDataArr.push(obj);
				}
				if(save_state == "-1")
				{
					//添加契约
					var add_obj:Object = new Object();
					add_obj.UserName = SubordinateName.text;
					add_obj.ContractContentModels = newDataArr;
					var service:ServerToolImpl =new ServerToolImpl();
					service.addContract(add_obj,addContractReturn);
				}
				if(save_state == "0" || save_state == "1" ||save_state == "2")
				{
					//修改契约
					var modify_obj:Object = new Object();
					modify_obj.UserName = SubordinateName.text;
					modify_obj.UserID = save_downID;
					modify_obj.ContractContentModels = newDataArr;
					var service:ServerToolImpl =new ServerToolImpl();
					service.modifyContractContent(modify_obj,modifyContractContentReturn);
				}
				
			}
			
			private  function addContractReturn(e:ResultEvent):void
			{
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				trace(e.result.toString());
				if(obj.SystemState==64)
				{
					PopUpManager.removePopUp(this);
					Util.getInstance().dispatchEvent(new CustomEvent(CustomEvent.UPDATE_DIVIDENDCONTRACT_LIST));//刷新列表以及页面数据
					
					if(obj.Result == -1){alert.show("用户不存在!","提示信息");}
					else if(obj.Result == -2){alert.show("不能添加会员!","提示信息");}
					else if(obj.Result == -3){alert.show("该代理已添加分红契约!","提示信息");}
					else if(obj.Result == -4){alert.show("级别超过限制!","提示信息");}
					//else if(obj.Result == -5){alert.show("该用户的上级代理没有契约，不能添加!","提示信息");}
					else if(obj.Result == -5){alert.show("您尚未签约，不能添加下级契约!","提示信息");}
					else if(obj.Result > 0){
						alert.show("添加契约成功！","提示信息",1);
					}
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					alert.show("添加失败！", resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			private  function modifyContractContentReturn(e:ResultEvent):void
			{
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				trace(e.result.toString());
				if(obj.SystemState==64)
				{
					alert.show("修改契约成功！","提示信息",1);
					PopUpManager.removePopUp(this);
					Util.getInstance().dispatchEvent(new CustomEvent(CustomEvent.UPDATE_DIVIDENDCONTRACT_LIST));//刷新列表以及页面数据
					
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					alert.show("修改失败！", resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			private function yd_clickHandler(e:SystemEvent):void{
				Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
			}
			
			[Embed(source="css/skin1/universal/images/pop_close.png")]
			[Bindable]
			private var closeImage:Class;
			/**
			 *关闭窗口 
			 **/
			protected function imgClose_clickHandler(event:MouseEvent):void
			{
				Util.getInstance().dispatchEvent(new CustomEvent(CustomEvent.UPDATE_DIVIDENDCONTRACT_LIST));//刷新列表以及页面数据
				PopUpManager.removePopUp(this);
			}
			protected function imgClose_rollOutHandler(event:MouseEvent):void
			{
				imgClose.alpha = 1;
			}
			
			protected function imgClose_rollOverHandler(event:MouseEvent):void
			{
				imgClose.alpha = .5;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:BitmapImage id="img" width="650" height="550"  source="@Embed('css/skin1/universal/images/alert_bg.png',
				   scaleGridLeft='100', scaleGridRight='110', scaleGridTop='100', scaleGridBottom='110')"/>
	
	<s:Label x="35" y="48" width="580" height="19" text="分红契约" textAlign="center" color="0xffffff" styleName="contract_styleName"/>
	<s:Image id="imgClose" x="590" y="45" source="{closeImage}" buttonMode="true" click="imgClose_clickHandler(event)"
			 rollOut="imgClose_rollOutHandler(event)"
			 rollOver="imgClose_rollOverHandler(event)"/>
	
	
	<s:VGroup left="50" right="50" top="80" bottom="45" gap="0">
		<s:HGroup height="30" verticalAlign="middle">
			<s:Label text="我的分红契约" styleName="contract_styleName" />
		</s:HGroup>
		<s:Group width="540" height="180" >
			<s:Rect width="538" height="30">
				<s:fill><s:LinearGradient ><s:GradientEntry color="0xfff0c5" alpha="1"/></s:LinearGradient></s:fill>
				<s:stroke><s:SolidColorStroke color="0x000000" alpha="0"/></s:stroke>
			</s:Rect>
			
			<s:VGroup gap="-1">
				<s:VGroup gap="-1"  width="100%" id="vg_title">
				</s:VGroup>
				<s:Scroller width="550" maxHeight="146" styleName="personalCenterScrollerStyle_1"  horizontalScrollPolicy="off">
					<s:VGroup id="vg" width="540" gap="-1"/>
				</s:Scroller>
			</s:VGroup>
		</s:Group>
		
		<s:HGroup height="30" verticalAlign="middle" gap="2">
			<s:Label text="下级" styleName="contract_styleName"  />
			<s:Label text="*****" styleName="contract_styleName"   color="0xff0000" id="SubordinateName"/>
			<s:Label text="的分红契约" styleName="contract_styleName"  />
		</s:HGroup>
		<s:Group width="540" height="150">
			<s:Rect width="538" height="30">
				<s:fill><s:LinearGradient ><s:GradientEntry color="0xfff0c5" alpha="1"/></s:LinearGradient></s:fill>
				<s:stroke><s:SolidColorStroke color="0x000000" alpha="0"/></s:stroke>
			</s:Rect>
			
			<s:VGroup gap="-1">
				<s:VGroup gap="-1"  width="100%" id="vg_2_title">
				</s:VGroup>
				<s:Scroller width="550" maxHeight="117" styleName="personalCenterScrollerStyle_1"  horizontalScrollPolicy="off">
					<s:VGroup id="vg_2" width="540" gap="-1"/>
				</s:Scroller>
			</s:VGroup>
		</s:Group>
		
		<s:HGroup width="540" height="40" horizontalAlign="center" verticalAlign="middle">
			<common:PopUpTabButtonItem id="save_btn" labelTitle="保    存" click="save_clickHandler()" />
		</s:HGroup>
		
	</s:VGroup>
	
</s:Group>
