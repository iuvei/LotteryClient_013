<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="init(event)"
		 width="920" height="455" xmlns:load="com.xazc.components.load.*" xmlns:skin1="css.skin1.*">
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerTool;
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.components.bettings.AlertMsgCenter;
			import com.xazc.event.JumpEvent;
			import com.xazc.event.Sendnotification;
			import com.xazc.event.SystemEvent;
			import com.xazc.single.Util;
			
			import mx.charts.HitData;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			private var titles:ArrayCollection=new ArrayCollection([
				{title:"a",w:148},
				{title:"b",w:120},
				{title:"c",w:120},
				{title:"d",w:120},
				{title:"e",w:120},
				{title:"f",w:100},
				{title:"g",w:100},
				{title:"h",w:100}
			]);
			private var models:ArrayCollection=new ArrayCollection([
				{orderMask:"TeamLotteryMoney",width:148},
				{orderMask:"TeamNum",width:120},
				{orderMask:"TeamRechargeMoney",width:120},
				{orderMask:"TeamDrawingsMoney",width:120},
				{orderMask:"TeamBetMoney",width:120}, 
				{orderMask:"TeamBetNum",width:100},
				{orderMask:"TeamNewAddNum",width:100},
				{orderMask:"TeamLoginNum",width:100}]);
			
			protected function init(event:FlexEvent):void
			{
				var end:Date = new Date(now_date.fullYear,now_date.month,now_date.date-1);
				EndTime = df.format(end) +" 23:59:59";
				var start:Date = new Date(now_date.fullYear,now_date.month,now_date.date-7);
				BeginTime = df.format(start) +" 00:00:00";
				
				//初始化表头
				var titleGrid:Grid=new Grid();
				var titlerow:GridRow=new GridRow();
				for(var i:int=0;i<titles.length;i++){
					titlerow.height=30;
					var gridItem:GridItem=new GridItem();
					gridItem.width=titles.getItemAt(i).w;
					var label:Label=new Label();
					if(titles.getItemAt(i).title == "a"){
						label.text = "团队余额";
					}else if(titles.getItemAt(i).title == "b"){
						label.text = "团队成员";
					}else if(titles.getItemAt(i).title == "c"){
						label.text = "团队充值";
					}else if(titles.getItemAt(i).title == "d"){
						label.text = "团队提款";
					}else if(titles.getItemAt(i).title == "e"){
						label.text = "团队投注";
					}else if(titles.getItemAt(i).title == "f"){
						label.text = "投注人数";
					}else if(titles.getItemAt(i).title == "g"){
						label.text = "注册人数";
					}else if(titles.getItemAt(i).title == "h"){
						label.text = "登录人数";
					}
					//					label.styleName="personalCenterDetailLabelStyle_1_white";
					gridItem.addChild(label);
					titlerow.addChild(gridItem);
					titleGrid.addChild(titlerow);
				}
				vg.addElementAt(titleGrid,1);
				//初始化提示
				var promptGrid:Grid=new Grid();
				var promptRow:GridRow=new GridRow();
				for(var j:int=0;j<titles.length;j++){
					promptRow.height=30;
					var promptItem:GridItem=new GridItem();
					promptItem.width=titles.getItemAt(j).w;
					var label1:Label=new Label();
					label1.text="";
					label1.styleName="personalCenterDetailLabelStyle_1"; 
					promptItem.addChild(label1);
					promptRow.addChild(promptItem);
					promptGrid.addChild(promptRow);
				}
				vg.addElementAt(promptGrid,2);
				
				loading.splicePromptLanguage(3,"");
				loading.resume();
				
				//团队总览_今日统计
				this.getData_DayList();
				//团队总览_历史数据
				this.getData_ChartList();
			}
			
			//查询
			private var alert:AlertMsgCenter=new AlertMsgCenter();
			private var service:ServerTool;
			
			//团队总览_今日统计
			private function getData_DayList():void
			{
				if(service==null){
					service=new ServerToolImpl();
				}
				var obj:Object=new Object();
				service.getTeamOverViewDayList(obj,getTeamOverViewDayListReturn);
			}
			//团队总览_历史数据
			private function getData_ChartList():void
			{
				if(service==null){
					service=new ServerToolImpl();
				}
				var obj:Object=new Object();
				obj.BeginTime = BeginTime;
				obj.EndTime = EndTime;
				obj.DataType = Datatype;      //[0:团队充值,1:团队提款,2:团队投注,3:注册人数,4:投注人数,5:登录人数]
				service.getTeamOverViewChartList(obj,getTeamOverViewChartListReturn);
			}
			
			private  function getTeamOverViewDayListReturn(e:ResultEvent):void
			{
				loading.suspend();
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				trace(e.result.toString());
				if(obj.SystemState==64)
				{
					updateViewPropertysValue(obj.TodayList);
					//sortArr(obj);
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					alert.show("查询失败！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			private function yd_clickHandler(e:SystemEvent):void{
				Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
			}
			public function updateViewPropertysValue(source:Array):void
			{
				if(source == null){
					return;
				}
				var promptGrid:Grid=vg.getChildAt(2) as Grid;//取出显示内容的grid
				promptGrid.removeAllChildren();//清空所有子项
				for(var j:int=0; j<source.length; j++){
					var promptRow:GridRow = new GridRow();
					promptRow.height = 30;
					promptGrid.addChild(promptRow);
					var label1:Label;
					for(var n:int=0; n<models.length; n++){
						var promptItem:GridItem = new GridItem();
						promptItem.width = models.getItemAt(n).width;
						var str:String = models.getItemAt(n).orderMask;
						label1=new Label();
						if(str == "TeamLotteryMoney"){label1.text = source[j].TeamLotteryMoney;
						}else if(str == "TeamNum"){label1.text = source[j].TeamNum;
						}else if(str == "TeamRechargeMoney"){label1.text = source[j].TeamRechargeMoney;
						}else if(str == "TeamDrawingsMoney"){label1.text = source[j].TeamDrawingsMoney;
						}else if(str == "TeamBetMoney"){label1.text = source[j].TeamBetMoney;
						}else if(str == "TeamBetNum"){label1.text = source[j].TeamBetNum;
						}else if(str == "TeamNewAddNum"){label1.text = source[j].TeamNewAddNum;
						}else if(str == "TeamLoginNum"){label1.text = source[j].TeamLoginNum;}
						
						label1.styleName="personalCenterDetailLabelStyle_1";	
						promptItem.addChild(label1);
						promptItem.horizontalScrollPolicy = "off";
						promptRow.addChild(promptItem);
					}
				}
				vg.addElementAt(promptGrid,2);
			} 
			
			private  function getTeamOverViewChartListReturn(e:ResultEvent):void
			{
				loading.suspend();
				var obj:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				trace(e.result.toString());
				if(obj.SystemState==64)
				{
					sortArr(obj.TeamDataInfoList as Array);
				}else if(obj.SystemState==-1){
					//跳转登录页面
					Sendnotification.instance.dispatchEvent(new JumpEvent(JumpEvent.JUMP_TO_LOGIN));
				}else if(obj.SystemState==-2){
					var yd:AlertMsgCenter=new AlertMsgCenter();
					yd.show(resourceManager.getString('PersonalCenterPrompt','alert_yd'),
						resourceManager.getString('PersonalCenterPrompt','alert_title'));
					yd.okBtnBoolean=true;
					yd.addEventListener(SystemEvent.ALERT_SUCSSES_BTN_CLICK,yd_clickHandler);return;
				}else{
					alert.show("查询失败！",resourceManager.getString('PersonalCenterPrompt','alert_title'));
				}
			}
			
			private var teamChargeArr:ArrayCollection = new ArrayCollection();//团队充值
			private var teamDrawingsArr:ArrayCollection = new ArrayCollection();//团队提款
			private var teamBetArr:ArrayCollection = new ArrayCollection();//团队投注
			private var teamBetNumArr:ArrayCollection = new ArrayCollection();//投注人数
			
			private var teamRegistNumArr:ArrayCollection = new ArrayCollection();//注册人数
			private var teamLoginNumArr:ArrayCollection = new ArrayCollection();//活跃用户
			
			private function sortArr(arr:Array):void
			{
				var target_arr:Array = new Array();
				
				if(Timetype == "time_week"){
					var today_date:Date = new Date();
					for(var i:int = 0; i< 7; i++){
						var item:Object = new Object();
						var target_date:Date = new Date(today_date.fullYear,today_date.month,today_date.date-7+i);
						item.IssueNum = df.format(target_date);
						item.CarNum = 0;
						target_arr.push(item);}}
				if(Timetype == "time_HalfMonths"){
					var today_date:Date = new Date();
					for(var i:int = 0; i< 15; i++){
						var item:Object = new Object();
						var target_date:Date = new Date(today_date.fullYear,today_date.month,today_date.date-15+i);
						item.IssueNum = df.format(target_date);
						item.CarNum = 0;
						target_arr.push(item);}}
				if(Timetype == "time_month"){
					var today_date:Date = new Date();
					for(var i:int = 0; i< 30; i++){
						var item:Object = new Object();
						var target_date:Date = new Date(today_date.fullYear,today_date.month,today_date.date-30+i);
						item.IssueNum = df.format(target_date);
						item.CarNum = 0;
						target_arr.push(item);}}
				
				//var myPattern:RegExp = /\//g;
				for(var m:int = 0; m< target_arr.length; m++)
				{
					for(var n:int = 0; n< arr.length; n++)
					{
						var item:Object = new Object();
						if(arr[n].DateTime == target_arr[m].IssueNum){
							target_arr[m].CarNum = arr[n].Num;
						}
					}
				}
				
				
				if(radioBtn_1.selected){
					linechart.dataProvider = target_arr;
					y_name = "团队充值: ";}
				else if(radioBtn_2.selected){
					linechart.dataProvider = target_arr;
					y_name = "团队提款: ";}
				else if(radioBtn_3.selected){
					linechart.dataProvider = target_arr;
					y_name = "团队投注: ";}
				else if(radioBtn_4.selected){
					linechart.dataProvider = target_arr;
					y_name = "注册人数: ";}
				else if(radioBtn_5.selected){
					linechart.dataProvider = target_arr;
					y_name = "投注人数: ";}
				else if(radioBtn_6.selected){
					linechart.dataProvider = target_arr;
					y_name = "登录人数: ";}
			}
			
			
			
			[Bindable]
			private var y_name:String;
			private var Datatype:int = 0; //[0:团队充值,1:团队提款,2:团队投注,3:注册人数,4:投注人数,5:登录人数]
			private var Timetype:String = "time_week";
			protected function radiobutton_clickHandler(event:MouseEvent):void
			{
				Datatype = int((event.currentTarget as RadioButton).id.split("_")[1])-1;
				//团队总览_历史数据
				this.getData_ChartList();
			}
			
			//图标tips
			private function pieChart_dataTipFunction(item:HitData):String { 
				var LCI:LineSeriesItem = item.chartItem as LineSeriesItem; 
				return LCI.item.IssueNum +　"</b><br/>"+
					y_name + LCI.item.CarNum +　"</b><br/>";
			}
			
			private var BeginTime:String;
			private var EndTime:String;
			private var now_date:Date = new Date();
			protected function time_select_clickHandler(event:MouseEvent):void
			{
				Timetype = (event.currentTarget as CheckBox).id;//保存时间id;
				
				time_week.selected = false;
				time_HalfMonths.selected = false;
				time_month.selected = false;
				(event.currentTarget as CheckBox).selected = true;
				
				var now_date:Date = new Date();
				switch((event.currentTarget as CheckBox).id)
				{
					case "time_week":
						var end:Date = new Date(now_date.fullYear,now_date.month,now_date.date-1);
						EndTime = df.format(end) +" 23:59:59";
						var start:Date = new Date(now_date.fullYear,now_date.month,now_date.date-7);
						BeginTime = df.format(start) +" 00:00:00";
						break;
					case "time_HalfMonths":
						var end:Date = new Date(now_date.fullYear,now_date.month,now_date.date-1);
						EndTime = df.format(end) +" 23:59:59";
						var start:Date = new Date(now_date.fullYear,now_date.month,now_date.date-15);
						BeginTime = df.format(start) +" 00:00:00";
						break;
					case "time_month":
						var end:Date = new Date(now_date.fullYear,now_date.month,now_date.date-1);
						EndTime = df.format(end) +" 23:59:59";
						var start:Date = new Date(now_date.fullYear,now_date.month-1,now_date.date);
						BeginTime = df.format(start) +" 00:00:00";
						break;
				}
				//团队总览_历史数据
				this.getData_ChartList();
			}
			
			[Bindable] 
			private var chartArray:ArrayCollection = new ArrayCollection([ 
				{IssueNum:"星期一",CarNum:"78454"}, 
				{IssueNum:"星期二",CarNum:"57854"}, 
				{IssueNum:"星期三",CarNum:"56454"}, 
				{IssueNum:"星期四",CarNum:"95659"}, 
				{IssueNum:"星期五",CarNum:"54555"}, 
				{IssueNum:"星期六",CarNum:"54452"}, 
				{IssueNum:"星期日",CarNum:"23346"}, 
			]); 
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:DateFormatter id="df" formatString="YYYY-MM-DD"/>
		<mx:DateFormatter id="df1" formatString="JJ:NN:SS"/>
		<mx:DateFormatter id="df2" formatString="YYYY-MM-DD JJ:NN:SS"/>
		
		<!-- 线条样式 -->
		<mx:Stroke id = "s1" color="0xc55662" weight="2" />  
		<!-- 线条点样式 （外圈颜色同线条颜色，外圈线条粗细为1) -->
		<mx:SolidColorStroke id = "pointS1" color="0xc55662" weight="2" caps="square" joints="bevel" />
		<mx:SeriesSlide id="slide" duration="1000" direction="up" />
		
	</fx:Declarations>
	
	<s:Rect y="15" width="920" height="60">
		<s:fill>
			<s:LinearGradient >
				<s:GradientEntry color="0xfff0c5" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:VGroup gap="10" width="100%" height="100%" y="15">
		<s:VGroup id="vg" width="100%" height="90" gap="-1">
			<mx:Label width="100%" height="30" textAlign="center" text="今日" />
		</s:VGroup>
		<s:VGroup width="100%" height="100%">
			<s:HGroup width="100%" gap="30">
				<s:CheckBox id="time_week" label="一周" click="time_select_clickHandler(event)" selected="true"/>
				<s:CheckBox label="半月" id="time_HalfMonths" click="time_select_clickHandler(event)"/>
				<s:CheckBox label="一月" id="time_month"  	click="time_select_clickHandler(event)"/>
			</s:HGroup>
			<s:HGroup gap="25" height="40" verticalAlign="middle">
				<s:RadioButton label="团队充值" buttonMode="true" id="radioBtn_1" click="radiobutton_clickHandler(event)" selected="true"/>
				<s:RadioButton label="团队提款" buttonMode="true" id="radioBtn_2" click="radiobutton_clickHandler(event)"/>
				<s:RadioButton label="团队投注" buttonMode="true" id="radioBtn_3" click="radiobutton_clickHandler(event)"/>
				<s:RadioButton label="投注人数" buttonMode="true" id="radioBtn_5" click="radiobutton_clickHandler(event)"/>
				<s:RadioButton label="注册人数" buttonMode="true" id="radioBtn_4" click="radiobutton_clickHandler(event)"/>
				<s:RadioButton label="登录人数" buttonMode="true" id="radioBtn_6" click="radiobutton_clickHandler(event)"/>
			</s:HGroup>
			
			<s:HGroup height="100%" width="100%" horizontalAlign="center" verticalAlign="top">
				
				<mx:LineChart id="linechart" x="7" y="20" width="850" height="250" 
							  dataTipFunction="pieChart_dataTipFunction" showDataTips="true">  
					<mx:backgroundElements>
						<!--定制图表水平网格线,direction有horizontal(水平)、vertical(垂直)-->
						<!--horizontalChangeCount可设置几个刻度显示一条网格线-->
						<!--horizontalTickAligned用来确定坐标轴上的刻度和水平网格线位置的对应关系-->
						<mx:GridLines horizontalShowOrigin="true" gridDirection="both" horizontalChangeCount="1" horizontalTickAligned="false"
									  >
							<!--alpha透明度，weight线条的粗细大小-->
							<mx:horizontalStroke>
								<mx:Stroke color="#777777" weight="1" alpha="0.3"/>
							</mx:horizontalStroke>
							<!--alpha透明度，weight线条的粗细大小-->
							<mx:verticalStroke>
								<mx:Stroke color="#777777" weight="1" alpha="0" pixelHinting="false" />
							</mx:verticalStroke>
						</mx:GridLines>
					</mx:backgroundElements>
					
					<mx:horizontalAxis >  
						<mx:CategoryAxis categoryField="IssueNum" ticksBetweenLabels="true" id="a1" />  
					</mx:horizontalAxis>  
					<!-- vertical axis ** minorInterval:y轴线条的间隔  interval:y轴数值的间隔,maximum：y轴最大值 , minimum：y轴最小值 --> 
					<mx:verticalAxis> 
						<mx:LinearAxis id="a2" baseAtZero="false" minimum="0" title=" " /> 
					</mx:verticalAxis> 
					
					<mx:horizontalAxisRenderers>  
						<mx:AxisRenderer axis="{a1}" color="#000000" fontSize="10" tickPlacement="none" canDropLabels="true">  
							<mx:axisStroke>                     
								<mx:Stroke color="#000000" caps="round" weight="1" miterLimit="30" />
							</mx:axisStroke>  
						</mx:AxisRenderer>  
					</mx:horizontalAxisRenderers>  
					
					<mx:verticalAxisRenderers >  
						<mx:AxisRenderer axis="{a2}" color="#000000" fontSize="12" tickPlacement="none" >  
							<mx:axisStroke>  
								<mx:Stroke color="#000000" caps="round" weight="1"/>  
							</mx:axisStroke>  
						</mx:AxisRenderer>  
					</mx:verticalAxisRenderers>  
					
					<mx:series>  
						<mx:LineSeries id="lineSeries" yField="CarNum"  form="segment" displayName="CarNum" lineStroke="{s1}" 
									   itemRenderer="mx.charts.renderers.CircleItemRenderer" left="5" right="5" 
									   stroke="{pointS1}" showDataEffect="{slide}" 
									   />
					</mx:series>  
				</mx:LineChart>   
				
			</s:HGroup>
		</s:VGroup>
		
		
	</s:VGroup>	
	<!-- 查询进度 -->
	<load:LoadingGroup width="100%" height="100%" visible="false" id="loading"/>
	
</s:Group>
