<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:load="com.xazc.components.load.*"
		 xmlns:components="com.xazc.components.*"
		 xmlns:login="com.xazc.view.login.*"
		 width="100%" height="100%" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 implements="com.xazc.interfaces.IInit,com.xazc.interfaces.IRecyclable">
	<fx:Script>
		<![CDATA[
			import com.xazc.comm.ServerTool;
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.comm.vo.UserDetailVo;
			import com.xazc.components.bettings.AlertMsg;
			import com.xazc.event.JumpEvent;
			import com.xazc.music.MusicPlayerFactory;
			import com.xazc.service.SendMessageService;
			import com.xazc.single.CommonMethodClass;
			import com.xazc.single.Cookie;
			import com.xazc.single.CurrentBusinessInfo;
			import com.xazc.single.CurrentUserInfo;
			import com.xazc.single.PersonCenterInfo;
			import com.xazc.single.UsersLotteryDate;
			import com.xazc.single.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			
			
			
			private var alert:AlertMsg;
			
			public var showAlertBoolean:Boolean=true;
			
			public static var cookie:Cookie = new Cookie();
			
			[Bindable]
			private static var user_Name:String = "";
			public var passwordFlag:Boolean = false;
			
			
			[Bindable]
			public var userShare:SharedObject = null;  
			
			
			/**
			 * 用户登录
			 * 
			 */
			private function userLogin_clickHandler(event:MouseEvent):void
			{
				alert = new AlertMsg();
				alert.keyBoardFlag=true;
				if(""==username.text){
					//alert.show("请填用户名！", "温馨提示");
					alert.show(resourceManager.getString('AlertMessage','message_021'), resourceManager.getString('AlertMessage','message_004'));
					return;
				}
				if(""==password.text){
					//alert.show("请填写密码！", "温馨提示");
					alert.show(resourceManager.getString('AlertMessage','message_022'), resourceManager.getString('AlertMessage','message_004'));
					return;
				}
				/* if(""==VerificationCode.text){
					alert.show(resourceManager.getString('AlertMessage','message_024'), resourceManager.getString('AlertMessage','message_004'));
					return;
				} */
				var serverTool:ServerTool = new ServerToolImpl();
				var obj:Object = new Object();
				obj.UserLoginName = username.text;
				obj.UserPassWord = password.text;
				//obj.SecCode = VerificationCode.text;
				obj.SecCode = '58324';
				serverTool.addUserLoginLog(obj,loginReturn);
				loading.splicePromptLanguage(5,"");
				loading.resume();
			}
			
			private function loginReturn(e:ResultEvent):void
			{
				alert = new AlertMsg();
				alert.keyBoardFlag=true;
				loading.suspend();
				var arr:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1); 
				if(arr.LoginState){
					MusicPlayerFactory.Load();
					showAlertBoolean=false;
					user_Name = arr.UserName;
					cookie.writeCookie("user_Name",user_Name);
					CurrentUserInfo.userName = user_Name;
					CurrentUserInfo.userPassWord = this.password.text;
					if(passwordFlag){
						cookie.writeCookie("user_Password",password.text);
					}
					cookie.writeCookie("web_url",arr.UserDetail.WEBUrl);
					
					arr.UserDetail.CommonFlag =arr.CommonFlag; 
					arr.UserDetail.IsShowTran =arr.IsShowTran;
					arr.UserDetail.UserType =arr.UserType;
					
					arr.UserDetail.LoginState =arr.LoginState;
					arr.UserDetail.Activity = arr.Activity;
					arr.UserDetail.IsContract = arr.IsContract;
					arr.UserDetail.IsDayWages = arr.IsDayWages;
					arr.UserDetail.LockState = arr.LockState;
					
					//保存个人信息；
					CommonMethodClass.commom_login(arr.UserDetail);
					
					//清理彩种缓存
					UsersLotteryDate.getInstance().lotteryDateList = new Array();
					
					this.username.text="";
					this.password.text="";
					this.VerificationCode.text="";
					
					FlexGlobals.topLevelApplication.popupFisrtLoginFlag=true;
					/**查询用户信息**/
					dispatchEvent(new Event("exitMoveEffectEvent"));
					switching_clickHandler();
					
					//（查询余额接口）
					var serverTool:ServerTool = new ServerToolImpl();
					var obj:Object = new Object();
					serverTool.getUserAllMoney(obj,getUserAllMoneyReturn);
				}else{
					if(arr.ErrorCode==1){
						//alert.show("验证码错误，请重新输入！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_025'), resourceManager.getString('AlertMessage','message_004'));
						
					}else if(arr.ErrorCode==2){
						//alert.show("您输入的用户名或密码有误，请重新输入！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_026'), resourceManager.getString('AlertMessage','message_004'));
						
					}else if(arr.ErrorCode==3){
						//alert.show("您的账户被锁定！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_027'), resourceManager.getString('AlertMessage','message_004'));
						
					}else if(arr.ErrorCode==4){
						//alert.show("您的账号被限制登录！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_028'), resourceManager.getString('AlertMessage','message_004'));
						
					}else if(arr.ErrorCode==5){
						//alert.show("您的账号被限制登录！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_028'), resourceManager.getString('AlertMessage','message_004'));
						
					}else if(arr.ErrorCode==6){
						//alert.show("您的账号被冻结！", "温馨提示");
						alert.show('您的账号被冻结！', resourceManager.getString('AlertMessage','message_004'));
						
					}else{
						//alert.show("登录异常！", "温馨提示");
						alert.show(resourceManager.getString('AlertMessage','message_030'), resourceManager.getString('AlertMessage','message_004'));
						
					}
					switching_clickHandler();
					//ErrorCode 1 验证码错误
					//ErrorCode 2 用户名密码错误
					//ErrorCode 3 被锁
					//ErrorCode = 4, IP在黑名单 您的账号被限制登录！
					//ErrorCode = 5,用户名在黑名单
				}
			}
			private function getUserAllMoneyReturn(e:ResultEvent):void
			{
				var arr:Object = Util.getInstance().resuleFormatToJSon(e.result.toString(),1);
				if(arr.state){
					//查询余额成功
					CurrentUserInfo.userName = arr.userName;
					CurrentUserInfo.userCPBalance = arr.lotteryMoney;
					CurrentUserInfo.userCPLockedBalance = arr.freezeMoney;
				}
			}
			
			/**
			 * 组件初始化方法 
			 * 
			 */
			public function init():void
			{
			}
			
			/**
			 * 组件移除 
			 *
			 */
			public function recycle():void
			{
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				
				
//				var userNameCookie:String = cookie.getCookie("user_Name") != null ?cookie.getCookie("user_Name").toString():"";
//				username.text = userNameCookie;
//				var passWordCookie:String = cookie.getCookie("user_Password") != null ?cookie.getCookie("user_Password").toString():"";
//				if(passWordCookie != ""){
//					checkBox.selected = true;
//				}
//				password.text = passWordCookie;
				this.addEventListener(KeyboardEvent.KEY_DOWN, loginInHandler);
				
				this.initLinks();
				
				
				
				switching_clickHandler();
			}
			
			private function loginInHandler(e:KeyboardEvent):void
			{
				if(!showAlertBoolean){
					return;
				}
				if(e.keyCode == 13)
					userLogin_clickHandler(null);
			}
			protected function switching_clickHandler():void
			{
				VerificationCodeImg.source = "";
				var timeString:String = new Date().milliseconds+"";
				VerificationCodeImg.source=CurrentBusinessInfo.serverUrl_net+"/tools/seccode.aspx?["+timeString+"]";
				
			}
			protected function rollOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				event.currentTarget.setFocus();
			}
			
			protected function lose_clickHandler(event:MouseEvent):void
			{
//				alert = new AlertMsg();
//				alert.show("请联系客服","温馨提示");
				
				//忘记密码
				var forgetPassword:ForgetPassword= new ForgetPassword();
				forgetPassword.x=(FlexGlobals.topLevelApplication.width-forgetPassword.width)/2;
				forgetPassword.y=(FlexGlobals.topLevelApplication.height-forgetPassword.height)/2;
				forgetPassword.setData();
				PopUpManager.addPopUp(forgetPassword,this,true);
				
			}
			
			protected function loginhelp_clickHandler(index:Number):void
			{
				alert = new AlertMsg();
				if(index==1){//在线客服
					navigateToURL(new URLRequest(CurrentBusinessInfo.timelyhelpLink),"_blank");
				}else if(index==2){//客户端下载页面
					navigateToURL(new URLRequest(CurrentBusinessInfo.serverUrl_net+"/"+CurrentBusinessInfo.MerchantProjectName+'/help/download.html'),"_blank");
				}else if(index==3){//线路检测页面
					navigateToURL(new URLRequest(CurrentBusinessInfo.serverUrl_net+"/"+CurrentBusinessInfo.MerchantProjectName+'/help/linetest.html'),"_blank");
				}
			}
			
			
			[Bindable]
			private var linksCodes:ArrayCollection=new ArrayCollection([
				{label:"线路一",label2:"线路一	--",code:"pc.hy998998.com"},
				{label:"线路二",label2:"线路二	--",code:"pc.hyyulept.com"},
				{label:"线路三",label2:"线路三	--",code:"pc.hy899899.com"},
				{label:"线路四",label2:"线路四	--",code:"pc.hy66668.com"},
				{label:"线路五",label2:"线路五	--",code:"pc.hyylbet.com"}
			]);
			/**
			 * 初始化显示连接 
			 * 
			 */
			private  function initLinks():void
			{
				var tempArr:Array = CurrentBusinessInfo.linkAddrs;
				var selectIndex:Number = 0;
				for(var i:int = 0;i<tempArr.length;i++){
					for(var j:int = 0;j<linksCodes.length;j++){
						if(tempArr[i].value==linksCodes[j].code){
							linksCodes[j].label2 = linksCodes[j].label+"	"+tempArr[i].label+"KB/s";
							if(0==i){
								selectIndex = j;
							}
						}
					}
				}
				
				//绑定数据到可选框中
				this.links.dataProvider=linksCodes;
				//默认选中链接
				this.links.selectedIndex =selectIndex; 
				
				
			}
			protected function links_changeHandler(event:IndexChangeEvent):void
			{
				CurrentBusinessInfo.serverUrl_net ='http://'+this.links.selectedItem.code;
				switching_clickHandler();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="exitMoveEffectEvent",type="flash.events.Event")]
		[ResourceBundle("LogInPage")]
		[ResourceBundle("AlertMessage")]
	</fx:Metadata>
	<!--  登录模块显示  -->
	<s:BorderContainer width="646" height="470" borderColor="0x3d3c38" backgroundAlpha=".75" backgroundColor="0x000000">
		<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"  paddingTop="15" gap="5">
			<s:Image source="css/skin1/assets/login/login_log.png" />
			<s:Spacer height="5"/>
			<s:Group>
				<s:Image source="css/skin1/assets/login/login_name_psw.png" />
				<!--  用户名  -->
				<components:LoginTextInput left="45" id="username" width="265" height="50" prompt="输入账户名"
										   />	
				<!--  密码  -->
				<components:LoginTextInput left="45" width="265" height="50" top="{username.height}" displayAsPassword="true" id="password"  maxChars="16" 
										   restrict="0-9A-Za-z_"    prompt="输入登录密码" 
										   />
				<!--  验证码  -->
				<s:Group width="400" height="70" visible="false" includeInLayout="false">
					
					<components:LoginTextInput id="VerificationCode" width="400" height="70" 
											   source="css/skin1/assets/login_abc.png"
											   maxChars="4" restrict="0-9A-Za-z" prompt="请输入验证码" />
					<s:Image right="20" source="" id="VerificationCodeImg"  click="switching_clickHandler()" top="20"/>
				</s:Group>
			</s:Group>
			<s:HGroup width="100%" horizontalAlign="right" paddingRight="165">
				<s:Button label="忘记密码" styleName="loginclickBtnStyle" click="lose_clickHandler(event)"/>
			</s:HGroup>
			<!--  用户名  -->
			<s:HGroup width="100%"   verticalAlign="middle" horizontalAlign="center" height="60">
				<s:Button id="okBtn"  label="登 录" skinClass="css.skin1.universal.logInBtnSkin" width="310" height="60" click="userLogin_clickHandler(event)" />	
			</s:HGroup>
			<s:Spacer height="1"/>
			<s:HGroup width="100%" horizontalAlign="center" gap="25">
				<s:Button label="在线客服" styleName="loginclickBtnStyle2" click="loginhelp_clickHandler(1)"/>
				<s:Button label="客户端下载" styleName="loginclickBtnStyle3" click="loginhelp_clickHandler(2)"/>
				<s:Button label="线路检测" styleName="loginclickBtnStyle4" click="loginhelp_clickHandler(3)"/>
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>
	<s:HGroup width="100%" top="500" horizontalAlign="center" >
		<s:HGroup  verticalAlign="middle" height="38">
			<s:Label text="请选择线路：" fontSize="18" color="0xffffff"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle" height="38">
			<s:ComboBox width="200" height="30" fontSize="16"  initialize="links.textInput.editable = false" id="links" change="links_changeHandler(event)" labelField="label2"  />
		</s:HGroup>
	</s:HGroup>
	<!-- 状态提示框 -->
	<load:LoadingGroup  id="loading" currentAlpha="0" width="100%" height="100%" visible="false" promptLanguage="登录中..."/>
</s:Group>
